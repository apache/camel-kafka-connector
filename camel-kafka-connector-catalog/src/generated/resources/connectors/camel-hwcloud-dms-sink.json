{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.hwclouddms.CamelHwclouddmsSinkConnector",
		"artifactId": "camel-hwcloud-dms-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-hwcloud-dms-sink",
		"type": "sink",
		"version": "0.12.0-SNAPSHOT",
		"description": "To integrate with a fully managed, high-performance message queuing service on Huawei Cloud"
	},
	"properties": {
		"camel.sink.path.operation": {
			"name": "camel.sink.path.operation",
			"description": "Operation to be performed",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Access key for the cloud user",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.accessUser": {
			"name": "camel.sink.endpoint.accessUser",
			"description": "The username of a RabbitMQ instance. This option is mandatory when creating a RabbitMQ instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.availableZones": {
			"name": "camel.sink.endpoint.availableZones",
			"description": "The ID of an available zone. This option is mandatory when creating an instance and it cannot be an empty array.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.endpoint": {
			"name": "camel.sink.endpoint.endpoint",
			"description": "DMS url. Carries higher precedence than region parameter based client initialization",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.engine": {
			"name": "camel.sink.endpoint.engine",
			"description": "The message engine. Either kafka or rabbitmq. If the parameter is not specified, all instances will be queried One of: [kafka] [rabbitmq]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"kafka",
				"rabbitmq"
			]
		},
		"camel.sink.endpoint.engineVersion": {
			"name": "camel.sink.endpoint.engineVersion",
			"description": "The version of the message engine. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ignoreSslVerification": {
			"name": "camel.sink.endpoint.ignoreSslVerification",
			"description": "Ignore SSL verification",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.instanceId": {
			"name": "camel.sink.endpoint.instanceId",
			"description": "The id of the instance. This option is mandatory when deleting or querying an instance",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.kafkaManagerPassword": {
			"name": "camel.sink.endpoint.kafkaManagerPassword",
			"description": "The password for logging in to the Kafka Manager. This option is mandatory when creating a Kafka instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.kafkaManagerUser": {
			"name": "camel.sink.endpoint.kafkaManagerUser",
			"description": "The username for logging in to the Kafka Manager. This option is mandatory when creating a Kafka instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.name": {
			"name": "camel.sink.endpoint.name",
			"description": "The name of the instance for creating and updating an instance. This option is mandatory when creating an instance",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.partitionNum": {
			"name": "camel.sink.endpoint.partitionNum",
			"description": "The maximum number of partitions in a Kafka instance. This option is mandatory when creating a Kafka instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.password": {
			"name": "camel.sink.endpoint.password",
			"description": "The password of a RabbitMQ instance. This option is mandatory when creating a RabbitMQ instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.productId": {
			"name": "camel.sink.endpoint.productId",
			"description": "The product ID. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.projectId": {
			"name": "camel.sink.endpoint.projectId",
			"description": "Cloud project ID",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "Proxy server ip\/hostname",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPassword": {
			"name": "camel.sink.endpoint.proxyPassword",
			"description": "Proxy authentication password",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "Proxy server port",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyUser": {
			"name": "camel.sink.endpoint.proxyUser",
			"description": "Proxy authentication user",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "DMS service region",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Secret key for the cloud user",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.securityGroupId": {
			"name": "camel.sink.endpoint.securityGroupId",
			"description": "The security group which the instance belongs to. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.serviceKeys": {
			"name": "camel.sink.endpoint.serviceKeys",
			"description": "Configuration object for cloud service authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.specification": {
			"name": "camel.sink.endpoint.specification",
			"description": "The baseline bandwidth of a Kafka instance. This option is mandatory when creating a Kafka instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.storageSpace": {
			"name": "camel.sink.endpoint.storageSpace",
			"description": "The message storage space. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.storageSpecCode": {
			"name": "camel.sink.endpoint.storageSpecCode",
			"description": "The storage I\/O specification. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.subnetId": {
			"name": "camel.sink.endpoint.subnetId",
			"description": "The subnet ID. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.vpcId": {
			"name": "camel.sink.endpoint.vpcId",
			"description": "The VPC ID. This option is mandatory when creating an instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.hwcloud-dms.lazyStartProducer": {
			"name": "camel.component.hwcloud-dms.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.hwcloud-dms.autowiredEnabled": {
			"name": "camel.component.hwcloud-dms.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}
