{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.cmis.CamelCmisSourceConnector",
		"artifactId": "camel-cmis-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-cmis-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Read and write data from to\/from a CMIS compliant content repositories."
	},
	"properties": {
		"camel.source.path.cmsUrl": {
			"name": "camel.source.path.cmsUrl",
			"description": "URL to the cmis repository",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.pageSize": {
			"name": "camel.source.endpoint.pageSize",
			"description": "Number of nodes to retrieve per page",
			"defaultValue": "100",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.readContent": {
			"name": "camel.source.endpoint.readContent",
			"description": "If set to true, the content of document node will be retrieved in addition to the properties",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.readCount": {
			"name": "camel.source.endpoint.readCount",
			"description": "Max number of nodes to read",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.repositoryId": {
			"name": "camel.source.endpoint.repositoryId",
			"description": "The Id of the repository to use. If not specified the first available repository is used",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.query": {
			"name": "camel.source.endpoint.query",
			"description": "The cmis query to execute against the repository. If not specified, the consumer will retrieve every node from the content repository by iterating the content tree recursively",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.source.endpoint.sessionFacadeFactory": {
			"name": "camel.source.endpoint.sessionFacadeFactory",
			"description": "To use a custom CMISSessionFacadeFactory to create the CMISSessionFacade instances",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.password": {
			"name": "camel.source.endpoint.password",
			"description": "Password for the cmis repository",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.username": {
			"name": "camel.source.endpoint.username",
			"description": "Username for the cmis repository",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.cmis.bridgeErrorHandler": {
			"name": "camel.component.cmis.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.cmis.autowiredEnabled": {
			"name": "camel.component.cmis.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.cmis.sessionFacadeFactory": {
			"name": "camel.component.cmis.sessionFacadeFactory",
			"description": "To use a custom CMISSessionFacadeFactory to create the CMISSessionFacade instances",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}