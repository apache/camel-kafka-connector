{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2iam.CamelAws2iamSinkConnector",
		"artifactId": "camel-aws2-iam-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-iam-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Manage AWS IAM instances using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.label": {
			"name": "camel.sink.path.label",
			"description": "Logical name",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.iamClient": {
			"name": "camel.sink.endpoint.iamClient",
			"description": "To use a existing configured AWS IAM as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "The operation to perform. You can configure a default operation on the component level, or the operation as part of the endpoint, or via a message header with the key CamelAwsIAMOperation. One of: [listAccessKeys] [createUser] [deleteUser] [getUser] [listUsers] [createAccessKey] [deleteAccessKey] [updateAccessKey] [createGroup] [deleteGroup] [listGroups] [addUserToGroup] [removeUserFromGroup]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"listAccessKeys",
				"createUser",
				"deleteUser",
				"getUser",
				"listUsers",
				"createAccessKey",
				"deleteAccessKey",
				"updateAccessKey",
				"createGroup",
				"deleteGroup",
				"listGroups",
				"addUserToGroup",
				"removeUserFromGroup"
			]
		},
		"camel.sink.endpoint.overrideEndpoint": {
			"name": "camel.sink.endpoint.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.pojoRequest": {
			"name": "camel.sink.endpoint.pojoRequest",
			"description": "If we want to use a POJO request as body or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the IAM client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the IAM client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the IAM client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which IAM client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"defaultValue": "\"aws-global\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.uriEndpointOverride": {
			"name": "camel.sink.endpoint.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.configuration": {
			"name": "camel.component.aws2-iam.configuration",
			"description": "Component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.iamClient": {
			"name": "camel.component.aws2-iam.iamClient",
			"description": "To use a existing configured AWS IAM as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.lazyStartProducer": {
			"name": "camel.component.aws2-iam.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.operation": {
			"name": "camel.component.aws2-iam.operation",
			"description": "The operation to perform. You can configure a default operation on the component level, or the operation as part of the endpoint, or via a message header with the key CamelAwsIAMOperation. One of: [listAccessKeys] [createUser] [deleteUser] [getUser] [listUsers] [createAccessKey] [deleteAccessKey] [updateAccessKey] [createGroup] [deleteGroup] [listGroups] [addUserToGroup] [removeUserFromGroup]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"listAccessKeys",
				"createUser",
				"deleteUser",
				"getUser",
				"listUsers",
				"createAccessKey",
				"deleteAccessKey",
				"updateAccessKey",
				"createGroup",
				"deleteGroup",
				"listGroups",
				"addUserToGroup",
				"removeUserFromGroup"
			]
		},
		"camel.component.aws2-iam.overrideEndpoint": {
			"name": "camel.component.aws2-iam.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.pojoRequest": {
			"name": "camel.component.aws2-iam.pojoRequest",
			"description": "If we want to use a POJO request as body or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.proxyHost": {
			"name": "camel.component.aws2-iam.proxyHost",
			"description": "To define a proxy host when instantiating the IAM client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.proxyPort": {
			"name": "camel.component.aws2-iam.proxyPort",
			"description": "To define a proxy port when instantiating the IAM client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.proxyProtocol": {
			"name": "camel.component.aws2-iam.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the IAM client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-iam.region": {
			"name": "camel.component.aws2-iam.region",
			"description": "The region in which IAM client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"defaultValue": "\"aws-global\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.trustAllCertificates": {
			"name": "camel.component.aws2-iam.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.uriEndpointOverride": {
			"name": "camel.component.aws2-iam.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.autowiredEnabled": {
			"name": "camel.component.aws2-iam.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.accessKey": {
			"name": "camel.component.aws2-iam.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-iam.secretKey": {
			"name": "camel.component.aws2-iam.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}