{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.googlesheetssource.CamelGooglesheetssourceSourceConnector",
		"artifactId": "camel-google-sheets-source-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-google-sheets-source-source",
		"type": "source",
		"version": "4.8.0-SNAPSHOT",
		"description": "Receive data from Google Sheets."
	},
	"properties": {
		"camel.kamelet.google-sheets-source.spreadsheetId": {
			"name": "camel.kamelet.google-sheets-source.spreadsheetId",
			"description": "The Spreadsheet ID to be used as events source",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.google-sheets-source.clientId": {
			"name": "camel.kamelet.google-sheets-source.clientId",
			"description": "Client ID of the sheets application",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.google-sheets-source.clientSecret": {
			"name": "camel.kamelet.google-sheets-source.clientSecret",
			"description": "Client Secret of the sheets application",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.google-sheets-source.accessToken": {
			"name": "camel.kamelet.google-sheets-source.accessToken",
			"description": "OAuth 2 access token for google sheets application. This typically expires after an hour so refreshToken is recommended for long term usage.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.google-sheets-source.refreshToken": {
			"name": "camel.kamelet.google-sheets-source.refreshToken",
			"description": "OAuth 2 refresh token for google sheets application. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.google-sheets-source.delay": {
			"name": "camel.kamelet.google-sheets-source.delay",
			"description": "The number of milliseconds before the next poll",
			"defaultValue": "500",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.repeatCount": {
			"name": "camel.kamelet.google-sheets-source.repeatCount",
			"description": "Specifies a maximum limit of number of fires",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.applicationName": {
			"name": "camel.kamelet.google-sheets-source.applicationName",
			"description": "Google Sheets application name",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.splitResults": {
			"name": "camel.kamelet.google-sheets-source.splitResults",
			"description": "True if value range result should be split into rows or columns to process each of them individually.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.range": {
			"name": "camel.kamelet.google-sheets-source.range",
			"description": "The range of rows and columns in a sheet to get data from. Example: A1:B3",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.majorDimension": {
			"name": "camel.kamelet.google-sheets-source.majorDimension",
			"description": "Specifies the major dimension that the given values should use (ROWS or COLUMNS). Example: ROWS",
			"defaultValue": "\"ROWS\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.google-sheets-source.columnNames": {
			"name": "camel.kamelet.google-sheets-source.columnNames",
			"description": "Optional custom column names that map to cell coordinates based on their position.",
			"defaultValue": "\"A\"",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}