{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.as2.CamelAs2SinkConnector",
		"artifactId": "camel-as2-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-as2-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Transfer data securely and reliably using the AS2 protocol (RFC4130)."
	},
	"properties": {
		"camel.sink.path.apiName": {
			"name": "camel.sink.path.apiName",
			"description": "What kind of operation to perform One of: [CLIENT] [SERVER]",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"CLIENT",
				"SERVER"
			]
		},
		"camel.sink.path.methodName": {
			"name": "camel.sink.path.methodName",
			"description": "What sub operation to use for the selected operation",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.as2From": {
			"name": "camel.sink.endpoint.as2From",
			"description": "The value of the AS2From header of AS2 message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.as2MessageStructure": {
			"name": "camel.sink.endpoint.as2MessageStructure",
			"description": "The structure of AS2 Message. One of: PLAIN - No encryption, no signature, SIGNED - No encryption, signature, ENCRYPTED - Encryption, no signature, ENCRYPTED_SIGNED - Encryption, signature One of: [PLAIN] [SIGNED] [ENCRYPTED] [SIGNED_ENCRYPTED] [PLAIN_COMPRESSED] [SIGNED_COMPRESSED] [ENCRYPTED_COMPRESSED] [ENCRYPTED_COMPRESSED_SIGNED]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"PLAIN",
				"SIGNED",
				"ENCRYPTED",
				"SIGNED_ENCRYPTED",
				"PLAIN_COMPRESSED",
				"SIGNED_COMPRESSED",
				"ENCRYPTED_COMPRESSED",
				"ENCRYPTED_COMPRESSED_SIGNED"
			]
		},
		"camel.sink.endpoint.as2To": {
			"name": "camel.sink.endpoint.as2To",
			"description": "The value of the AS2To header of AS2 message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.as2Version": {
			"name": "camel.sink.endpoint.as2Version",
			"description": "The version of the AS2 protocol. One of: [1.0] [1.1]",
			"defaultValue": "\"1.1\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"1.0",
				"1.1"
			]
		},
		"camel.sink.endpoint.clientFqdn": {
			"name": "camel.sink.endpoint.clientFqdn",
			"description": "The Client Fully Qualified Domain Name (FQDN). Used in message ids sent by endpoint.",
			"defaultValue": "\"camel.apache.org\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.compressionAlgorithm": {
			"name": "camel.sink.endpoint.compressionAlgorithm",
			"description": "The algorithm used to compress EDI message. One of: [ZLIB]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"ZLIB"
			]
		},
		"camel.sink.endpoint.decryptingPrivateKey": {
			"name": "camel.sink.endpoint.decryptingPrivateKey",
			"description": "The key used to encrypt the EDI message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.dispositionNotificationTo": {
			"name": "camel.sink.endpoint.dispositionNotificationTo",
			"description": "The value of the Disposition-Notification-To header. Assigning a value to this parameter requests a message disposition notification (MDN) for the AS2 message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ediMessageTransferEncoding": {
			"name": "camel.sink.endpoint.ediMessageTransferEncoding",
			"description": "The transfer encoding of EDI message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ediMessageType": {
			"name": "camel.sink.endpoint.ediMessageType",
			"description": "The content type of EDI message. One of application\/edifact, application\/edi-x12, application\/edi-consent",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.encryptingAlgorithm": {
			"name": "camel.sink.endpoint.encryptingAlgorithm",
			"description": "The algorithm used to encrypt EDI message. One of: [AES128_CBC] [AES192_CBC] [AES256_CBC] [AES128_CCM] [AES192_CCM] [AES256_CCM] [AES128_GCM] [AES192_GCM] [AES256_GCM] [CAMELLIA128_CBC] [CAMELLIA192_CBC] [CAMELLIA256_CBC] [CAST5_CBC] [DES_CBC] [DES_EDE3_CBC] [GOST28147_GCFB] [IDEA_CBC] [RC2_CBC] [RC4] [SEED_CBC]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"AES128_CBC",
				"AES192_CBC",
				"AES256_CBC",
				"AES128_CCM",
				"AES192_CCM",
				"AES256_CCM",
				"AES128_GCM",
				"AES192_GCM",
				"AES256_GCM",
				"CAMELLIA128_CBC",
				"CAMELLIA192_CBC",
				"CAMELLIA256_CBC",
				"CAST5_CBC",
				"DES_CBC",
				"DES_EDE3_CBC",
				"GOST28147_GCFB",
				"IDEA_CBC",
				"RC2_CBC",
				"RC4",
				"SEED_CBC"
			]
		},
		"camel.sink.endpoint.encryptingCertificateChain": {
			"name": "camel.sink.endpoint.encryptingCertificateChain",
			"description": "The chain of certificates used to encrypt EDI message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.from": {
			"name": "camel.sink.endpoint.from",
			"description": "The value of the From header of AS2 message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.inBody": {
			"name": "camel.sink.endpoint.inBody",
			"description": "Sets the name of a parameter to be passed in the exchange In Body",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.mdnMessageTemplate": {
			"name": "camel.sink.endpoint.mdnMessageTemplate",
			"description": "The template used to format MDN message",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.requestUri": {
			"name": "camel.sink.endpoint.requestUri",
			"description": "The request URI of EDI message.",
			"defaultValue": "\"\/\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.server": {
			"name": "camel.sink.endpoint.server",
			"description": "The value included in the Server message header identifying the AS2 Server.",
			"defaultValue": "\"Camel AS2 Server Endpoint\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.serverFqdn": {
			"name": "camel.sink.endpoint.serverFqdn",
			"description": "The Server Fully Qualified Domain Name (FQDN). Used in message ids sent by endpoint.",
			"defaultValue": "\"camel.apache.org\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.serverPortNumber": {
			"name": "camel.sink.endpoint.serverPortNumber",
			"description": "The port number of server.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.signedReceiptMicAlgorithms": {
			"name": "camel.sink.endpoint.signedReceiptMicAlgorithms",
			"description": "The list of algorithms, in order of preference, requested to generate a message integrity check (MIC) returned in message dispostion notification (MDN)",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.signingAlgorithm": {
			"name": "camel.sink.endpoint.signingAlgorithm",
			"description": "The algorithm used to sign EDI message. One of: [SHA3_224WITHRSA] [SHA3_256WITHRSA] [SHA3_384withRSA] [SHA3_512WITHRSA] [MD5WITHRSA] [SHA1WITHRSA] [MD2WITHRSA] [SHA224WITHRSA] [SHA256WITHRSA] [SHA384WITHRSA] [SHA512WITHRSA] [RIPEMD128WITHRSA] [RIPEMD160WITHRSA] [RIPEMD256WITHRSA] [SHA224WITHDSA] [SHA256WITHDSA] [SHA384WITHDSA] [SHA512WITHDSA] [SHA3_224WITHDSA] [SHA3_256WITHDSA] [SHA3_384WITHDSA] [SHA3_512WITHDSA] [SHA1WITHDSA] [SHA3_224WITHECDSA] [SHA3_256WITHECDSA] [SHA3_384WITHECDSA] [SHA3_512WITHECDSA] [SHA1WITHECDSA] [SHA224WITHECDSA] [SHA256WITHECDSA] [SHA384WITHECDSA] [SHA512WITHECDSA] [SHA1WITHPLAIN_ECDSA] [SHA224WITHPLAIN_ECDSA] [SHA256WITHPLAIN_ECDSA] [SHA384WITHPLAIN_ECDSA] [SHA512WITHPLAIN_ECDSA] [RIPEMD160WITHPLAIN_ECDSA] [SHA1WITHRSAANDMGF1] [SHA224WITHRSAANDMGF1] [SHA256WITHRSAANDMGF1] [SHA384WITHRSAANDMGF1] [SHA512WITHRSAANDMGF1] [SHA3_224WITHRSAANDMGF1] [SHA3_256WITHRSAANDMGF1] [SHA3_384WITHRSAANDMGF1] [SHA3_512WITHRSAANDMGF1]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SHA3_224WITHRSA",
				"SHA3_256WITHRSA",
				"SHA3_384withRSA",
				"SHA3_512WITHRSA",
				"MD5WITHRSA",
				"SHA1WITHRSA",
				"MD2WITHRSA",
				"SHA224WITHRSA",
				"SHA256WITHRSA",
				"SHA384WITHRSA",
				"SHA512WITHRSA",
				"RIPEMD128WITHRSA",
				"RIPEMD160WITHRSA",
				"RIPEMD256WITHRSA",
				"SHA224WITHDSA",
				"SHA256WITHDSA",
				"SHA384WITHDSA",
				"SHA512WITHDSA",
				"SHA3_224WITHDSA",
				"SHA3_256WITHDSA",
				"SHA3_384WITHDSA",
				"SHA3_512WITHDSA",
				"SHA1WITHDSA",
				"SHA3_224WITHECDSA",
				"SHA3_256WITHECDSA",
				"SHA3_384WITHECDSA",
				"SHA3_512WITHECDSA",
				"SHA1WITHECDSA",
				"SHA224WITHECDSA",
				"SHA256WITHECDSA",
				"SHA384WITHECDSA",
				"SHA512WITHECDSA",
				"SHA1WITHPLAIN_ECDSA",
				"SHA224WITHPLAIN_ECDSA",
				"SHA256WITHPLAIN_ECDSA",
				"SHA384WITHPLAIN_ECDSA",
				"SHA512WITHPLAIN_ECDSA",
				"RIPEMD160WITHPLAIN_ECDSA",
				"SHA1WITHRSAANDMGF1",
				"SHA224WITHRSAANDMGF1",
				"SHA256WITHRSAANDMGF1",
				"SHA384WITHRSAANDMGF1",
				"SHA512WITHRSAANDMGF1",
				"SHA3_224WITHRSAANDMGF1",
				"SHA3_256WITHRSAANDMGF1",
				"SHA3_384WITHRSAANDMGF1",
				"SHA3_512WITHRSAANDMGF1"
			]
		},
		"camel.sink.endpoint.signingCertificateChain": {
			"name": "camel.sink.endpoint.signingCertificateChain",
			"description": "The chain of certificates used to sign EDI message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.signingPrivateKey": {
			"name": "camel.sink.endpoint.signingPrivateKey",
			"description": "The key used to sign the EDI message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.subject": {
			"name": "camel.sink.endpoint.subject",
			"description": "The value of Subject header of AS2 message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.targetHostname": {
			"name": "camel.sink.endpoint.targetHostname",
			"description": "The host name (IP or DNS name) of target host.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.targetPortNumber": {
			"name": "camel.sink.endpoint.targetPortNumber",
			"description": "The port number of target host. -1 indicates the scheme default port.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.userAgent": {
			"name": "camel.sink.endpoint.userAgent",
			"description": "The value included in the User-Agent message header identifying the AS2 user agent.",
			"defaultValue": "\"Camel AS2 Client Endpoint\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.as2.lazyStartProducer": {
			"name": "camel.component.as2.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.as2.autowiredEnabled": {
			"name": "camel.component.as2.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.as2.configuration": {
			"name": "camel.component.as2.configuration",
			"description": "Component configuration",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}