{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.openshiftbuilds.CamelOpenshiftbuildsSinkConnector",
		"artifactId": "camel-openshift-builds-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-openshift-builds-sink",
		"type": "sink",
		"version": "0.6.0-SNAPSHOT"
	},
	"properties": {
		"camel.sink.path.masterUrl": {
			"name": "camel.sink.path.masterUrl",
			"description": "Kubernetes Master url",
			"defaultValue": "null",
			"priority": "HIGH"
		},
		"camel.sink.endpoint.apiVersion": {
			"name": "camel.sink.endpoint.apiVersion",
			"description": "The Kubernetes API Version to use",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.dnsDomain": {
			"name": "camel.sink.endpoint.dnsDomain",
			"description": "The dns domain, used for ServiceCall EIP",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.kubernetesClient": {
			"name": "camel.sink.endpoint.kubernetesClient",
			"description": "Default KubernetesClient to use if provided",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "Producer operation to do on Kubernetes",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.portName": {
			"name": "camel.sink.endpoint.portName",
			"description": "The port name, used for ServiceCall EIP",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.portProtocol": {
			"name": "camel.sink.endpoint.portProtocol",
			"description": "The port protocol, used for ServiceCall EIP",
			"defaultValue": "\"tcp\"",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.connectionTimeout": {
			"name": "camel.sink.endpoint.connectionTimeout",
			"description": "Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.caCertData": {
			"name": "camel.sink.endpoint.caCertData",
			"description": "The CA Cert Data",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.caCertFile": {
			"name": "camel.sink.endpoint.caCertFile",
			"description": "The CA Cert File",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientCertData": {
			"name": "camel.sink.endpoint.clientCertData",
			"description": "The Client Cert Data",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientCertFile": {
			"name": "camel.sink.endpoint.clientCertFile",
			"description": "The Client Cert File",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientKeyAlgo": {
			"name": "camel.sink.endpoint.clientKeyAlgo",
			"description": "The Key Algorithm used by the client",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientKeyData": {
			"name": "camel.sink.endpoint.clientKeyData",
			"description": "The Client Key data",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientKeyFile": {
			"name": "camel.sink.endpoint.clientKeyFile",
			"description": "The Client Key file",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.clientKeyPassphrase": {
			"name": "camel.sink.endpoint.clientKeyPassphrase",
			"description": "The Client Key Passphrase",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.oauthToken": {
			"name": "camel.sink.endpoint.oauthToken",
			"description": "The Auth Token",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.password": {
			"name": "camel.sink.endpoint.password",
			"description": "Password to connect to Kubernetes",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.trustCerts": {
			"name": "camel.sink.endpoint.trustCerts",
			"description": "Define if the certs we used are trusted anyway or not",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.username": {
			"name": "camel.sink.endpoint.username",
			"description": "Username to connect to Kubernetes",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.component.openshift-builds.lazyStartProducer": {
			"name": "camel.component.openshift-builds.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.openshift-builds.basicPropertyBinding": {
			"name": "camel.component.openshift-builds.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		}
	}
}
