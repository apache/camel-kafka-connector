{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.sqlstored.CamelSqlstoredSinkConnector",
		"artifactId": "camel-sql-stored-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-sql-stored-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Perform SQL queries as a JDBC Stored Procedures using Spring JDBC."
	},
	"properties": {
		"camel.sink.path.template": {
			"name": "camel.sink.path.template",
			"description": "Sets the StoredProcedure template to perform",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.batch": {
			"name": "camel.sink.endpoint.batch",
			"description": "Enables or disables batch mode",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.dataSource": {
			"name": "camel.sink.endpoint.dataSource",
			"description": "Sets the DataSource to use to communicate with the database.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.function": {
			"name": "camel.sink.endpoint.function",
			"description": "Whether this call is for a function.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.noop": {
			"name": "camel.sink.endpoint.noop",
			"description": "If set, will ignore the results of the template and use the existing IN message as the OUT message for the continuation of processing",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.outputHeader": {
			"name": "camel.sink.endpoint.outputHeader",
			"description": "Store the template result in a header instead of the message body. By default, outputHeader == null and the template result is stored in the message body, any existing content in the message body is discarded. If outputHeader is set, the value is used as the name of the header to store the template result and the original message body is preserved.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.useMessageBodyForTemplate": {
			"name": "camel.sink.endpoint.useMessageBodyForTemplate",
			"description": "Whether to use the message body as the template and then headers for parameters. If this option is enabled then the template in the uri is not used.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.templateOptions": {
			"name": "camel.sink.endpoint.templateOptions",
			"description": "Configures the Spring JdbcTemplate with the key\/values from the Map",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.sql-stored.dataSource": {
			"name": "camel.component.sql-stored.dataSource",
			"description": "Sets the DataSource to use to communicate with the database.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.sql-stored.lazyStartProducer": {
			"name": "camel.component.sql-stored.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.sql-stored.autowiredEnabled": {
			"name": "camel.component.sql-stored.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}