{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.vertxhttp.CamelVertxhttpSinkConnector",
		"artifactId": "camel-vertx-http-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-vertx-http-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send requests to external HTTP servers using Vert.x"
	},
	"properties": {
		"camel.sink.path.httpUri": {
			"name": "camel.sink.path.httpUri",
			"description": "The HTTP URI to connect to",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.connectTimeout": {
			"name": "camel.sink.endpoint.connectTimeout",
			"description": "The amount of time in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout.",
			"defaultValue": "60000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.cookieStore": {
			"name": "camel.sink.endpoint.cookieStore",
			"description": "A custom CookieStore to use when session management is enabled. If this option is not set then an in-memory CookieStore is used",
			"defaultValue": "\"InMemoryCookieStore\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.headerFilterStrategy": {
			"name": "camel.sink.endpoint.headerFilterStrategy",
			"description": "A custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message.",
			"defaultValue": "\"VertxHttpHeaderFilterStrategy\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.httpMethod": {
			"name": "camel.sink.endpoint.httpMethod",
			"description": "The HTTP method to use. The HttpMethod header cannot override this option if set",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.okStatusCodeRange": {
			"name": "camel.sink.endpoint.okStatusCodeRange",
			"description": "The status codes which are considered a success response. The values are inclusive. Multiple ranges can be defined, separated by comma, e.g. 200-204,209,301-304. Each range must be a single number or from-to with the dash included",
			"defaultValue": "\"200-299\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.responsePayloadAsByteArray": {
			"name": "camel.sink.endpoint.responsePayloadAsByteArray",
			"description": "Whether the response body should be byte or as io.vertx.core.buffer.Buffer",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sessionManagement": {
			"name": "camel.sink.endpoint.sessionManagement",
			"description": "Enables session management via WebClientSession. By default the client is configured to use an in-memory CookieStore. The cookieStore option can be used to override this",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.throwExceptionOnFailure": {
			"name": "camel.sink.endpoint.throwExceptionOnFailure",
			"description": "Disable throwing HttpOperationFailedException in case of failed responses from the remote server",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timeout": {
			"name": "camel.sink.endpoint.timeout",
			"description": "The amount of time in milliseconds after which if the request does not return any data within the timeout period a TimeoutException fails the request. Setting zero or a negative value disables the timeout.",
			"defaultValue": "-1L",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.transferException": {
			"name": "camel.sink.endpoint.transferException",
			"description": "If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was sent back serialized in the response as a application\/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Camel will deserialize the incoming data from the request to a Java object, which can be a potential security risk.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.useCompression": {
			"name": "camel.sink.endpoint.useCompression",
			"description": "Set whether compression is enabled to handled compressed (E.g gzipped) responses",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.vertxHttpBinding": {
			"name": "camel.sink.endpoint.vertxHttpBinding",
			"description": "A custom VertxHttpBinding which can control how to bind between Vert.x and Camel.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.webClientOptions": {
			"name": "camel.sink.endpoint.webClientOptions",
			"description": "Sets customized options for configuring the Vert.x WebClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "The proxy server host address",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPassword": {
			"name": "camel.sink.endpoint.proxyPassword",
			"description": "The proxy server password if authentication is required",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "The proxy server port",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyType": {
			"name": "camel.sink.endpoint.proxyType",
			"description": "The proxy server type One of: [HTTP] [SOCKS4] [SOCKS5]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"SOCKS4",
				"SOCKS5"
			]
		},
		"camel.sink.endpoint.proxyUsername": {
			"name": "camel.sink.endpoint.proxyUsername",
			"description": "The proxy server username if authentication is required",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicAuthPassword": {
			"name": "camel.sink.endpoint.basicAuthPassword",
			"description": "The password to use for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicAuthUsername": {
			"name": "camel.sink.endpoint.basicAuthUsername",
			"description": "The user name to use for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.bearerToken": {
			"name": "camel.sink.endpoint.bearerToken",
			"description": "The bearer token to use for bearer token authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sslContextParameters": {
			"name": "camel.sink.endpoint.sslContextParameters",
			"description": "To configure security using SSLContextParameters",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.lazyStartProducer": {
			"name": "camel.component.vertx-http.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.responsePayloadAsByteArray": {
			"name": "camel.component.vertx-http.responsePayloadAsByteArray",
			"description": "Whether the response body should be byte or as io.vertx.core.buffer.Buffer",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.allowJavaSerializedObject": {
			"name": "camel.component.vertx-http.allowJavaSerializedObject",
			"description": "Whether to allow java serialization when a request has the Content-Type application\/x-java-serialized-object This is disabled by default. If you enable this, be aware that Java will deserialize the incoming data from the request. This can be a potential security risk.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.autowiredEnabled": {
			"name": "camel.component.vertx-http.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.vertx": {
			"name": "camel.component.vertx-http.vertx",
			"description": "To use an existing vertx instead of creating a new instance",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.vertxHttpBinding": {
			"name": "camel.component.vertx-http.vertxHttpBinding",
			"description": "A custom VertxHttpBinding which can control how to bind between Vert.x and Camel",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.vertxOptions": {
			"name": "camel.component.vertx-http.vertxOptions",
			"description": "To provide a custom set of vertx options for configuring vertx",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.headerFilterStrategy": {
			"name": "camel.component.vertx-http.headerFilterStrategy",
			"description": "To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.proxyHost": {
			"name": "camel.component.vertx-http.proxyHost",
			"description": "The proxy server host address",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.proxyPassword": {
			"name": "camel.component.vertx-http.proxyPassword",
			"description": "The proxy server password if authentication is required",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.proxyPort": {
			"name": "camel.component.vertx-http.proxyPort",
			"description": "The proxy server port",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.proxyType": {
			"name": "camel.component.vertx-http.proxyType",
			"description": "The proxy server type One of: [HTTP] [SOCKS4] [SOCKS5]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"SOCKS4",
				"SOCKS5"
			]
		},
		"camel.component.vertx-http.proxyUsername": {
			"name": "camel.component.vertx-http.proxyUsername",
			"description": "The proxy server username if authentication is required",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.basicAuthPassword": {
			"name": "camel.component.vertx-http.basicAuthPassword",
			"description": "The password to use for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.basicAuthUsername": {
			"name": "camel.component.vertx-http.basicAuthUsername",
			"description": "The user name to use for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.bearerToken": {
			"name": "camel.component.vertx-http.bearerToken",
			"description": "The bearer token to use for bearer token authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.sslContextParameters": {
			"name": "camel.component.vertx-http.sslContextParameters",
			"description": "To configure security using SSLContextParameters",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.vertx-http.useGlobalSslContextParameters": {
			"name": "camel.component.vertx-http.useGlobalSslContextParameters",
			"description": "Enable usage of global SSL context parameters",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}