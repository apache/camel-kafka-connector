{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.springredis.CamelSpringredisSourceConnector",
		"artifactId": "camel-spring-redis-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-spring-redis-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send and receive messages from Redis."
	},
	"properties": {
		"camel.source.path.host": {
			"name": "camel.source.path.host",
			"description": "The host where Redis server is running.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.path.port": {
			"name": "camel.source.path.port",
			"description": "Redis server port number",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.channels": {
			"name": "camel.source.endpoint.channels",
			"description": "List of topic names or name patterns to subscribe to. Multiple names can be separated by comma.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.command": {
			"name": "camel.source.endpoint.command",
			"description": "Default command, which can be overridden by message header. Notice the consumer only supports the following commands: PSUBSCRIBE and SUBSCRIBE One of: [PING] [SET] [GET] [QUIT] [EXISTS] [DEL] [TYPE] [FLUSHDB] [KEYS] [RANDOMKEY] [RENAME] [RENAMENX] [RENAMEX] [DBSIZE] [EXPIRE] [EXPIREAT] [TTL] [SELECT] [MOVE] [FLUSHALL] [GETSET] [MGET] [SETNX] [SETEX] [MSET] [MSETNX] [DECRBY] [DECR] [INCRBY] [INCR] [APPEND] [SUBSTR] [HSET] [HGET] [HSETNX] [HMSET] [HMGET] [HINCRBY] [HEXISTS] [HDEL] [HLEN] [HKEYS] [HVALS] [HGETALL] [RPUSH] [LPUSH] [LLEN] [LRANGE] [LTRIM] [LINDEX] [LSET] [LREM] [LPOP] [RPOP] [RPOPLPUSH] [SADD] [SMEMBERS] [SREM] [SPOP] [SMOVE] [SCARD] [SISMEMBER] [SINTER] [SINTERSTORE] [SUNION] [SUNIONSTORE] [SDIFF] [SDIFFSTORE] [SRANDMEMBER] [ZADD] [ZRANGE] [ZREM] [ZINCRBY] [ZRANK] [ZREVRANK] [ZREVRANGE] [ZCARD] [ZSCORE] [MULTI] [DISCARD] [EXEC] [WATCH] [UNWATCH] [SORT] [BLPOP] [BRPOP] [AUTH] [SUBSCRIBE] [PUBLISH] [UNSUBSCRIBE] [PSUBSCRIBE] [PUNSUBSCRIBE] [ZCOUNT] [ZRANGEBYSCORE] [ZREVRANGEBYSCORE] [ZREMRANGEBYRANK] [ZREMRANGEBYSCORE] [ZUNIONSTORE] [ZINTERSTORE] [SAVE] [BGSAVE] [BGREWRITEAOF] [LASTSAVE] [SHUTDOWN] [INFO] [MONITOR] [SLAVEOF] [CONFIG] [STRLEN] [SYNC] [LPUSHX] [PERSIST] [RPUSHX] [ECHO] [LINSERT] [DEBUG] [BRPOPLPUSH] [SETBIT] [GETBIT] [SETRANGE] [GETRANGE] [PEXPIRE] [PEXPIREAT] [GEOADD] [GEODIST] [GEOHASH] [GEOPOS] [GEORADIUS] [GEORADIUSBYMEMBER]",
			"defaultValue": "\"SET\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"PING",
				"SET",
				"GET",
				"QUIT",
				"EXISTS",
				"DEL",
				"TYPE",
				"FLUSHDB",
				"KEYS",
				"RANDOMKEY",
				"RENAME",
				"RENAMENX",
				"RENAMEX",
				"DBSIZE",
				"EXPIRE",
				"EXPIREAT",
				"TTL",
				"SELECT",
				"MOVE",
				"FLUSHALL",
				"GETSET",
				"MGET",
				"SETNX",
				"SETEX",
				"MSET",
				"MSETNX",
				"DECRBY",
				"DECR",
				"INCRBY",
				"INCR",
				"APPEND",
				"SUBSTR",
				"HSET",
				"HGET",
				"HSETNX",
				"HMSET",
				"HMGET",
				"HINCRBY",
				"HEXISTS",
				"HDEL",
				"HLEN",
				"HKEYS",
				"HVALS",
				"HGETALL",
				"RPUSH",
				"LPUSH",
				"LLEN",
				"LRANGE",
				"LTRIM",
				"LINDEX",
				"LSET",
				"LREM",
				"LPOP",
				"RPOP",
				"RPOPLPUSH",
				"SADD",
				"SMEMBERS",
				"SREM",
				"SPOP",
				"SMOVE",
				"SCARD",
				"SISMEMBER",
				"SINTER",
				"SINTERSTORE",
				"SUNION",
				"SUNIONSTORE",
				"SDIFF",
				"SDIFFSTORE",
				"SRANDMEMBER",
				"ZADD",
				"ZRANGE",
				"ZREM",
				"ZINCRBY",
				"ZRANK",
				"ZREVRANK",
				"ZREVRANGE",
				"ZCARD",
				"ZSCORE",
				"MULTI",
				"DISCARD",
				"EXEC",
				"WATCH",
				"UNWATCH",
				"SORT",
				"BLPOP",
				"BRPOP",
				"AUTH",
				"SUBSCRIBE",
				"PUBLISH",
				"UNSUBSCRIBE",
				"PSUBSCRIBE",
				"PUNSUBSCRIBE",
				"ZCOUNT",
				"ZRANGEBYSCORE",
				"ZREVRANGEBYSCORE",
				"ZREMRANGEBYRANK",
				"ZREMRANGEBYSCORE",
				"ZUNIONSTORE",
				"ZINTERSTORE",
				"SAVE",
				"BGSAVE",
				"BGREWRITEAOF",
				"LASTSAVE",
				"SHUTDOWN",
				"INFO",
				"MONITOR",
				"SLAVEOF",
				"CONFIG",
				"STRLEN",
				"SYNC",
				"LPUSHX",
				"PERSIST",
				"RPUSHX",
				"ECHO",
				"LINSERT",
				"DEBUG",
				"BRPOPLPUSH",
				"SETBIT",
				"GETBIT",
				"SETRANGE",
				"GETRANGE",
				"PEXPIRE",
				"PEXPIREAT",
				"GEOADD",
				"GEODIST",
				"GEOHASH",
				"GEOPOS",
				"GEORADIUS",
				"GEORADIUSBYMEMBER"
			]
		},
		"camel.source.endpoint.connectionFactory": {
			"name": "camel.source.endpoint.connectionFactory",
			"description": "Reference to a pre-configured RedisConnectionFactory instance to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.redisTemplate": {
			"name": "camel.source.endpoint.redisTemplate",
			"description": "Reference to a pre-configured RedisTemplate instance to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.serializer": {
			"name": "camel.source.endpoint.serializer",
			"description": "Reference to a pre-configured RedisSerializer instance to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.source.endpoint.listenerContainer": {
			"name": "camel.source.endpoint.listenerContainer",
			"description": "Reference to a pre-configured RedisMessageListenerContainer instance to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.spring-redis.redisTemplate": {
			"name": "camel.component.spring-redis.redisTemplate",
			"description": "Reference to a pre-configured RedisTemplate instance to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.spring-redis.bridgeErrorHandler": {
			"name": "camel.component.spring-redis.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.spring-redis.autowiredEnabled": {
			"name": "camel.component.spring-redis.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}