{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.iec60870client.CamelIec60870clientSinkConnector",
		"artifactId": "camel-iec60870-client-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-iec60870-client-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "IEC 60870 supervisory control and data acquisition (SCADA) client using NeoSCADA implementation."
	},
	"properties": {
		"camel.sink.path.uriPath": {
			"name": "camel.sink.path.uriPath",
			"description": "The object information address",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.dataModuleOptions": {
			"name": "camel.sink.endpoint.dataModuleOptions",
			"description": "Data module options",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.protocolOptions": {
			"name": "camel.sink.endpoint.protocolOptions",
			"description": "Protocol options",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.acknowledgeWindow": {
			"name": "camel.sink.endpoint.acknowledgeWindow",
			"description": "Parameter W - Acknowledgment window.",
			"defaultValue": "10",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.adsuAddressType": {
			"name": "camel.sink.endpoint.adsuAddressType",
			"description": "The common ASDU address size. May be either SIZE_1 or SIZE_2. One of: [SIZE_1] [SIZE_2]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SIZE_1",
				"SIZE_2"
			]
		},
		"camel.sink.endpoint.causeOfTransmissionType": {
			"name": "camel.sink.endpoint.causeOfTransmissionType",
			"description": "The cause of transmission type. May be either SIZE_1 or SIZE_2. One of: [SIZE_1] [SIZE_2]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SIZE_1",
				"SIZE_2"
			]
		},
		"camel.sink.endpoint.informationObjectAddressType": {
			"name": "camel.sink.endpoint.informationObjectAddressType",
			"description": "The information address size. May be either SIZE_1, SIZE_2 or SIZE_3. One of: [SIZE_1] [SIZE_2] [SIZE_3]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SIZE_1",
				"SIZE_2",
				"SIZE_3"
			]
		},
		"camel.sink.endpoint.maxUnacknowledged": {
			"name": "camel.sink.endpoint.maxUnacknowledged",
			"description": "Parameter K - Maximum number of un-acknowledged messages.",
			"defaultValue": "15",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timeout1": {
			"name": "camel.sink.endpoint.timeout1",
			"description": "Timeout T1 in milliseconds.",
			"defaultValue": "15000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timeout2": {
			"name": "camel.sink.endpoint.timeout2",
			"description": "Timeout T2 in milliseconds.",
			"defaultValue": "10000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timeout3": {
			"name": "camel.sink.endpoint.timeout3",
			"description": "Timeout T3 in milliseconds.",
			"defaultValue": "20000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.causeSourceAddress": {
			"name": "camel.sink.endpoint.causeSourceAddress",
			"description": "Whether to include the source address",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.connectionTimeout": {
			"name": "camel.sink.endpoint.connectionTimeout",
			"description": "Timeout in millis to wait for client to establish a connected connection.",
			"defaultValue": "10000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ignoreBackgroundScan": {
			"name": "camel.sink.endpoint.ignoreBackgroundScan",
			"description": "Whether background scan transmissions should be ignored.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ignoreDaylightSavingTime": {
			"name": "camel.sink.endpoint.ignoreDaylightSavingTime",
			"description": "Whether to ignore or respect DST",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timeZone": {
			"name": "camel.sink.endpoint.timeZone",
			"description": "The timezone to use. May be any Java time zone string",
			"defaultValue": "\"UTC\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.connectionId": {
			"name": "camel.sink.endpoint.connectionId",
			"description": "An identifier grouping connection instances",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.iec60870-client.defaultConnectionOptions": {
			"name": "camel.component.iec60870-client.defaultConnectionOptions",
			"description": "Default connection options",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.iec60870-client.lazyStartProducer": {
			"name": "camel.component.iec60870-client.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.iec60870-client.autowiredEnabled": {
			"name": "camel.component.iec60870-client.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}