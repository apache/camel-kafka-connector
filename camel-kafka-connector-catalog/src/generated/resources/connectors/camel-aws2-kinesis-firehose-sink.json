{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2kinesisfirehose.CamelAws2kinesisfirehoseSinkConnector",
		"artifactId": "camel-aws2-kinesis-firehose-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-kinesis-firehose-sink",
		"type": "sink",
		"version": "0.7.0-SNAPSHOT",
		"description": "Produce data to AWS Kinesis Firehose streams using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.streamName": {
			"name": "camel.sink.path.streamName",
			"description": "Name of the stream",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.amazonKinesisFirehoseClient": {
			"name": "camel.sink.endpoint.amazonKinesisFirehoseClient",
			"description": "Amazon Kinesis Firehose client to use for all requests for this endpoint",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.autoDiscoverClient": {
			"name": "camel.sink.endpoint.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.cborEnabled": {
			"name": "camel.sink.endpoint.cborEnabled",
			"description": "This option will set the CBOR_ENABLED property during the execution",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "The operation to do in case the user don't want to send only a record One of: [sendBatchRecord] [createDeliveryStream] [deleteDeliveryStream] [describeDeliveryStream] [updateDestination]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"sendBatchRecord",
				"createDeliveryStream",
				"deleteDeliveryStream",
				"describeDeliveryStream",
				"updateDestination"
			]
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Kinesis Firehose client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which Kinesis Firehose client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.amazonKinesisFirehoseClient": {
			"name": "camel.component.aws2-kinesis-firehose.amazonKinesisFirehoseClient",
			"description": "Amazon Kinesis Firehose client to use for all requests for this endpoint",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.autoDiscoverClient": {
			"name": "camel.component.aws2-kinesis-firehose.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.cborEnabled": {
			"name": "camel.component.aws2-kinesis-firehose.cborEnabled",
			"description": "This option will set the CBOR_ENABLED property during the execution",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.configuration": {
			"name": "camel.component.aws2-kinesis-firehose.configuration",
			"description": "Component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.lazyStartProducer": {
			"name": "camel.component.aws2-kinesis-firehose.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.operation": {
			"name": "camel.component.aws2-kinesis-firehose.operation",
			"description": "The operation to do in case the user don't want to send only a record One of: [sendBatchRecord] [createDeliveryStream] [deleteDeliveryStream] [describeDeliveryStream] [updateDestination]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"sendBatchRecord",
				"createDeliveryStream",
				"deleteDeliveryStream",
				"describeDeliveryStream",
				"updateDestination"
			]
		},
		"camel.component.aws2-kinesis-firehose.proxyHost": {
			"name": "camel.component.aws2-kinesis-firehose.proxyHost",
			"description": "To define a proxy host when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.proxyPort": {
			"name": "camel.component.aws2-kinesis-firehose.proxyPort",
			"description": "To define a proxy port when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.proxyProtocol": {
			"name": "camel.component.aws2-kinesis-firehose.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Kinesis Firehose client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-kinesis-firehose.region": {
			"name": "camel.component.aws2-kinesis-firehose.region",
			"description": "The region in which Kinesis Firehose client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.trustAllCertificates": {
			"name": "camel.component.aws2-kinesis-firehose.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.basicPropertyBinding": {
			"name": "camel.component.aws2-kinesis-firehose.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.accessKey": {
			"name": "camel.component.aws2-kinesis-firehose.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-kinesis-firehose.secretKey": {
			"name": "camel.component.aws2-kinesis-firehose.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}