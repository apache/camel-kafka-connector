{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.googlebigquerysql.CamelGooglebigquerysqlSinkConnector",
		"artifactId": "camel-google-bigquery-sql-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-google-bigquery-sql-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Access Google Cloud BigQuery service using SQL queries."
	},
	"properties": {
		"camel.sink.path.projectId": {
			"name": "camel.sink.path.projectId",
			"description": "Google Cloud Project Id",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.path.queryString": {
			"name": "camel.sink.path.queryString",
			"description": "BigQuery standard SQL query",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.connectionFactory": {
			"name": "camel.sink.endpoint.connectionFactory",
			"description": "ConnectionFactory to obtain connection to Bigquery Service. If not provided the default one will be used",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-bigquery-sql.connectionFactory": {
			"name": "camel.component.google-bigquery-sql.connectionFactory",
			"description": "ConnectionFactory to obtain connection to Bigquery Service. If not provided the default one will be used",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-bigquery-sql.lazyStartProducer": {
			"name": "camel.component.google-bigquery-sql.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-bigquery-sql.projectId": {
			"name": "camel.component.google-bigquery-sql.projectId",
			"description": "Google Cloud Project Id",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-bigquery-sql.autowiredEnabled": {
			"name": "camel.component.google-bigquery-sql.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}