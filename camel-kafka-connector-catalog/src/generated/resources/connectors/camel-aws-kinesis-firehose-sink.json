{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.awskinesisfirehose.CamelAwskinesisfirehoseSinkConnector",
		"artifactId": "camel-aws-kinesis-firehose-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws-kinesis-firehose-sink",
		"type": "sink",
		"version": "0.7.0-SNAPSHOT",
		"description": "Consume data from AWS Kinesis Firehose streams."
	},
	"properties": {
		"camel.sink.path.streamName": {
			"name": "camel.sink.path.streamName",
			"description": "Name of the stream",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.amazonKinesisFirehoseClient": {
			"name": "camel.sink.endpoint.amazonKinesisFirehoseClient",
			"description": "Amazon Kinesis Firehose client to use for all requests for this endpoint",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.autoDiscoverClient": {
			"name": "camel.sink.endpoint.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Kinesis Firehose client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which Kinesis client needs to work. When using this parameter, the configuration will expect the capitalized name of the region (for example AP_EAST_1)You'll need to use the name Regions.EU_WEST_1.name()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.amazonKinesisFirehoseClient": {
			"name": "camel.component.aws-kinesis-firehose.amazonKinesisFirehoseClient",
			"description": "Amazon Kinesis Firehose client to use for all requests for this endpoint",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.autoDiscoverClient": {
			"name": "camel.component.aws-kinesis-firehose.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.configuration": {
			"name": "camel.component.aws-kinesis-firehose.configuration",
			"description": "The component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.lazyStartProducer": {
			"name": "camel.component.aws-kinesis-firehose.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.proxyHost": {
			"name": "camel.component.aws-kinesis-firehose.proxyHost",
			"description": "To define a proxy host when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.proxyPort": {
			"name": "camel.component.aws-kinesis-firehose.proxyPort",
			"description": "To define a proxy port when instantiating the Kinesis Firehose client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.proxyProtocol": {
			"name": "camel.component.aws-kinesis-firehose.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Kinesis Firehose client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws-kinesis-firehose.region": {
			"name": "camel.component.aws-kinesis-firehose.region",
			"description": "The region in which Kinesis client needs to work. When using this parameter, the configuration will expect the capitalized name of the region (for example AP_EAST_1)You'll need to use the name Regions.EU_WEST_1.name()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.basicPropertyBinding": {
			"name": "camel.component.aws-kinesis-firehose.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.accessKey": {
			"name": "camel.component.aws-kinesis-firehose.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-kinesis-firehose.secretKey": {
			"name": "camel.component.aws-kinesis-firehose.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}