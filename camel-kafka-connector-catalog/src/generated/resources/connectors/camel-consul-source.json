{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.consul.CamelConsulSourceConnector",
		"artifactId": "camel-consul-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-consul-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Integrate with Consul service discovery and configuration store."
	},
	"properties": {
		"camel.source.path.apiEndpoint": {
			"name": "camel.source.path.apiEndpoint",
			"description": "The API endpoint",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.connectTimeout": {
			"name": "camel.source.endpoint.connectTimeout",
			"description": "Connect timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.connectTimeoutMillis": {
			"name": "camel.source.endpoint.connectTimeoutMillis",
			"description": "Connect timeout for OkHttpClient. Deprecation note: Use connectTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.source.endpoint.consulClient": {
			"name": "camel.source.endpoint.consulClient",
			"description": "Reference to a com.orbitz.consul.Consul in the registry.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.key": {
			"name": "camel.source.endpoint.key",
			"description": "The default key. Can be overridden by CamelConsulKey",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.pingInstance": {
			"name": "camel.source.endpoint.pingInstance",
			"description": "Configure if the AgentClient should attempt a ping before returning the Consul instance",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.readTimeout": {
			"name": "camel.source.endpoint.readTimeout",
			"description": "Read timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.readTimeoutMillis": {
			"name": "camel.source.endpoint.readTimeoutMillis",
			"description": "Read timeout for OkHttpClient. Deprecation note: Use readTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.source.endpoint.tags": {
			"name": "camel.source.endpoint.tags",
			"description": "Set tags. You can separate multiple tags by comma.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.url": {
			"name": "camel.source.endpoint.url",
			"description": "The Consul agent URL",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.writeTimeout": {
			"name": "camel.source.endpoint.writeTimeout",
			"description": "Write timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.writeTimeoutMillis": {
			"name": "camel.source.endpoint.writeTimeoutMillis",
			"description": "Write timeout for OkHttpClient. Deprecation note: Use writeTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.source.endpoint.consistencyMode": {
			"name": "camel.source.endpoint.consistencyMode",
			"description": "The consistencyMode used for queries, default ConsistencyMode.DEFAULT One of: [DEFAULT] [STALE] [CONSISTENT]",
			"defaultValue": "\"DEFAULT\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"DEFAULT",
				"STALE",
				"CONSISTENT"
			]
		},
		"camel.source.endpoint.datacenter": {
			"name": "camel.source.endpoint.datacenter",
			"description": "The data center",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.nearNode": {
			"name": "camel.source.endpoint.nearNode",
			"description": "The near node to use for queries.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.nodeMeta": {
			"name": "camel.source.endpoint.nodeMeta",
			"description": "The note meta-data to use for queries.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.aclToken": {
			"name": "camel.source.endpoint.aclToken",
			"description": "Sets the ACL token to be used with Consul",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.password": {
			"name": "camel.source.endpoint.password",
			"description": "Sets the password to be used for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.sslContextParameters": {
			"name": "camel.source.endpoint.sslContextParameters",
			"description": "SSL configuration using an org.apache.camel.support.jsse.SSLContextParameters instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.userName": {
			"name": "camel.source.endpoint.userName",
			"description": "Sets the username to be used for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.blockSeconds": {
			"name": "camel.source.endpoint.blockSeconds",
			"description": "The second to wait for a watch event, default 10 seconds",
			"defaultValue": "\"10\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.firstIndex": {
			"name": "camel.source.endpoint.firstIndex",
			"description": "The first index for watch for, default 0",
			"defaultValue": "\"0\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.recursive": {
			"name": "camel.source.endpoint.recursive",
			"description": "Recursively watch, default false",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.connectTimeout": {
			"name": "camel.component.consul.connectTimeout",
			"description": "Connect timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.connectTimeoutMillis": {
			"name": "camel.component.consul.connectTimeoutMillis",
			"description": "Connect timeout for OkHttpClient. Deprecation note: Use connectTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.consul.consulClient": {
			"name": "camel.component.consul.consulClient",
			"description": "Reference to a com.orbitz.consul.Consul in the registry.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.key": {
			"name": "camel.component.consul.key",
			"description": "The default key. Can be overridden by CamelConsulKey",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.pingInstance": {
			"name": "camel.component.consul.pingInstance",
			"description": "Configure if the AgentClient should attempt a ping before returning the Consul instance",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.readTimeout": {
			"name": "camel.component.consul.readTimeout",
			"description": "Read timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.readTimeoutMillis": {
			"name": "camel.component.consul.readTimeoutMillis",
			"description": "Read timeout for OkHttpClient. Deprecation note: Use readTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.consul.tags": {
			"name": "camel.component.consul.tags",
			"description": "Set tags. You can separate multiple tags by comma.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.url": {
			"name": "camel.component.consul.url",
			"description": "The Consul agent URL",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.writeTimeout": {
			"name": "camel.component.consul.writeTimeout",
			"description": "Write timeout for OkHttpClient",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.writeTimeoutMillis": {
			"name": "camel.component.consul.writeTimeoutMillis",
			"description": "Write timeout for OkHttpClient. Deprecation note: Use writeTimeout instead",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.consul.bridgeErrorHandler": {
			"name": "camel.component.consul.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.autowiredEnabled": {
			"name": "camel.component.consul.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.configuration": {
			"name": "camel.component.consul.configuration",
			"description": "Consul configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.consistencyMode": {
			"name": "camel.component.consul.consistencyMode",
			"description": "The consistencyMode used for queries, default ConsistencyMode.DEFAULT One of: [DEFAULT] [STALE] [CONSISTENT]",
			"defaultValue": "\"DEFAULT\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"DEFAULT",
				"STALE",
				"CONSISTENT"
			]
		},
		"camel.component.consul.datacenter": {
			"name": "camel.component.consul.datacenter",
			"description": "The data center",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.nearNode": {
			"name": "camel.component.consul.nearNode",
			"description": "The near node to use for queries.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.nodeMeta": {
			"name": "camel.component.consul.nodeMeta",
			"description": "The note meta-data to use for queries.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.aclToken": {
			"name": "camel.component.consul.aclToken",
			"description": "Sets the ACL token to be used with Consul",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.password": {
			"name": "camel.component.consul.password",
			"description": "Sets the password to be used for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.sslContextParameters": {
			"name": "camel.component.consul.sslContextParameters",
			"description": "SSL configuration using an org.apache.camel.support.jsse.SSLContextParameters instance.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.useGlobalSslContextParameters": {
			"name": "camel.component.consul.useGlobalSslContextParameters",
			"description": "Enable usage of global SSL context parameters.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.userName": {
			"name": "camel.component.consul.userName",
			"description": "Sets the username to be used for basic authentication",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.blockSeconds": {
			"name": "camel.component.consul.blockSeconds",
			"description": "The second to wait for a watch event, default 10 seconds",
			"defaultValue": "\"10\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.firstIndex": {
			"name": "camel.component.consul.firstIndex",
			"description": "The first index for watch for, default 0",
			"defaultValue": "\"0\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.consul.recursive": {
			"name": "camel.component.consul.recursive",
			"description": "Recursively watch, default false",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}