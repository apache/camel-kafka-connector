{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2eventbridge.CamelAws2eventbridgeSinkConnector",
		"artifactId": "camel-aws2-eventbridge-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-eventbridge-sink",
		"type": "sink",
		"version": "0.7.0-SNAPSHOT",
		"description": "Manage AWS Eventbridge cluster instances using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.eventbusNameOrArn": {
			"name": "camel.sink.path.eventbusNameOrArn",
			"description": "Event bus name or ARN",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.autoDiscoverClient": {
			"name": "camel.sink.endpoint.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.eventbridgeClient": {
			"name": "camel.sink.endpoint.eventbridgeClient",
			"description": "To use a existing configured AWS Eventbridge as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.eventPatternFile": {
			"name": "camel.sink.endpoint.eventPatternFile",
			"description": "EventPattern File",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "The operation to perform One of: [putRule] [putTargets] [removeTargets] [deleteRule] [enableRule] [disableRule] [describeRule] [listRules] [listTargetsByRule] [listRuleNamesByTarget]",
			"defaultValue": "\"putRule\"",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"putRule",
				"putTargets",
				"removeTargets",
				"deleteRule",
				"enableRule",
				"disableRule",
				"describeRule",
				"listRules",
				"listTargetsByRule",
				"listRuleNamesByTarget"
			]
		},
		"camel.sink.endpoint.pojoRequest": {
			"name": "camel.sink.endpoint.pojoRequest",
			"description": "If we want to use a POJO request as body or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the Eventbridge client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the Eventbridge client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Eventbridge client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which Eventbridge client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.autoDiscoverClient": {
			"name": "camel.component.aws2-eventbridge.autoDiscoverClient",
			"description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.configuration": {
			"name": "camel.component.aws2-eventbridge.configuration",
			"description": "Component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.eventbridgeClient": {
			"name": "camel.component.aws2-eventbridge.eventbridgeClient",
			"description": "To use a existing configured AWS Eventbridge as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.eventPatternFile": {
			"name": "camel.component.aws2-eventbridge.eventPatternFile",
			"description": "EventPattern File",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.lazyStartProducer": {
			"name": "camel.component.aws2-eventbridge.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.operation": {
			"name": "camel.component.aws2-eventbridge.operation",
			"description": "The operation to perform One of: [putRule] [putTargets] [removeTargets] [deleteRule] [enableRule] [disableRule] [describeRule] [listRules] [listTargetsByRule] [listRuleNamesByTarget]",
			"defaultValue": "\"putRule\"",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"putRule",
				"putTargets",
				"removeTargets",
				"deleteRule",
				"enableRule",
				"disableRule",
				"describeRule",
				"listRules",
				"listTargetsByRule",
				"listRuleNamesByTarget"
			]
		},
		"camel.component.aws2-eventbridge.pojoRequest": {
			"name": "camel.component.aws2-eventbridge.pojoRequest",
			"description": "If we want to use a POJO request as body or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.proxyHost": {
			"name": "camel.component.aws2-eventbridge.proxyHost",
			"description": "To define a proxy host when instantiating the Eventbridge client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.proxyPort": {
			"name": "camel.component.aws2-eventbridge.proxyPort",
			"description": "To define a proxy port when instantiating the Eventbridge client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.proxyProtocol": {
			"name": "camel.component.aws2-eventbridge.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the Eventbridge client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-eventbridge.region": {
			"name": "camel.component.aws2-eventbridge.region",
			"description": "The region in which Eventbridge client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.trustAllCertificates": {
			"name": "camel.component.aws2-eventbridge.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.basicPropertyBinding": {
			"name": "camel.component.aws2-eventbridge.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "LOW",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.accessKey": {
			"name": "camel.component.aws2-eventbridge.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-eventbridge.secretKey": {
			"name": "camel.component.aws2-eventbridge.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}