{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.awssdb.CamelAwssdbSinkConnector",
		"artifactId": "camel-aws-sdb-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws-sdb-sink",
		"type": "sink",
		"version": "0.7.0-SNAPSHOT",
		"description": "Store and Retrieve data from\/to AWS SDB service."
	},
	"properties": {
		"camel.sink.path.domainName": {
			"name": "camel.sink.path.domainName",
			"description": "The name of the domain currently worked with.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.amazonSDBClient": {
			"name": "camel.sink.endpoint.amazonSDBClient",
			"description": "To use the AmazonSimpleDB as the client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.consistentRead": {
			"name": "camel.sink.endpoint.consistentRead",
			"description": "Determines whether or not strong consistency should be enforced when data is read.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.maxNumberOfDomains": {
			"name": "camel.sink.endpoint.maxNumberOfDomains",
			"description": "The maximum number of domain names you want returned. The range is 1 to 100.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "Operation to perform One of: [BatchDeleteAttributes] [BatchPutAttributes] [DeleteAttributes] [DeleteDomain] [DomainMetadata] [GetAttributes] [ListDomains] [PutAttributes] [Select]",
			"defaultValue": "\"PutAttributes\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"BatchDeleteAttributes",
				"BatchPutAttributes",
				"DeleteAttributes",
				"DeleteDomain",
				"DomainMetadata",
				"GetAttributes",
				"ListDomains",
				"PutAttributes",
				"Select"
			]
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the SDB client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the SDB client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the SDB client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which SDB client needs to work. When using this parameter, the configuration will expect the capitalized name of the region (for example AP_EAST_1) You'll need to use the name Regions.EU_WEST_1.name()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-sdb.lazyStartProducer": {
			"name": "camel.component.aws-sdb.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws-sdb.basicPropertyBinding": {
			"name": "camel.component.aws-sdb.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "LOW",
			"required": "false"
		}
	}
}