[[@{title}-kafka-connector-sink]]
= @{title}-kafka-connector sink configuration

When using @{title}-kafka-connector as sink make sure to use the following Maven dependency to have support for the connector:

[source,xml]
----
<dependency>
  <groupId>@{groupId}.kafkaconnector</groupId>
  <artifactId>@{artifactId}-kafka-connector</artifactId>
  <version>x.x.x</version>
  <!-- use the same version as your Camel Kafka connector version -->
</dependency>
----

To use this Sink connector in Kafka connect you'll need to set the following connector.class

[source,java]
----
connector.class=@{connectorClass}
----

@if{options.isEmpty()}
The @{title} sink connector has no options.
@else{}
The @{title} sink connector supports @{options.size()} options, which are listed below.
@end{}

@if{!options.isEmpty()}
[width="100%",cols="2,5,^1,2",options="header"]
|===
| Name | Description | Default | Priority
@foreach{row : options}| *@{row.getShortName(50)}* | @{util.escape(row.description)} | @{row.defaultValue} | @{row.priority}
@end{}|===
@end{}

@if{converters.isEmpty()}
The @{title} sink connector has no converters out of the box.
@else{}
The @{title} sink connector supports @{converters.size()} converters out of the box, which are listed below.
@end{}

@if{!converters.isEmpty()}
[source,java]
----
@foreach{row : converters}
@{row}
@end{}
----
@end{}

@if{transforms.isEmpty()}
The @{title} sink connector has no transforms out of the box.
@else{}
The @{title} sink connector supports @{converters.size()} transforms out of the box, which are listed below.
@end{}

@if{!transforms.isEmpty()}
[source,java]
----
@foreach{row : transforms}
@{row}
@end{}
----
@end{}

@if{aggregationStrategies.isEmpty()}
The @{title} sink connector has no aggregation strategies out of the box.
@else{}
The @{title} sink connector supports @{aggregationStrategies.size()} aggregation strategies out of the box, which are listed below.
@end{}

@if{!aggregationStrategies.isEmpty()}
[source,java]
----
@foreach{row : aggregationStrategies}
@{row}
@end{}
----
@end{}
