{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2sqs.CamelAws2sqsSinkConnector",
		"artifactId": "camel-aws2-sqs-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-sqs-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Sending and receive messages to\/from AWS SQS service using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.queueNameOrArn": {
			"name": "camel.sink.path.queueNameOrArn",
			"description": "Queue name or ARN",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.amazonAWSHost": {
			"name": "camel.sink.endpoint.amazonAWSHost",
			"description": "The hostname of the Amazon AWS cloud.",
			"defaultValue": "\"amazonaws.com\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.amazonSQSClient": {
			"name": "camel.sink.endpoint.amazonSQSClient",
			"description": "To use the AmazonSQS as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.autoCreateQueue": {
			"name": "camel.sink.endpoint.autoCreateQueue",
			"description": "Setting the autocreation of the queue",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.headerFilterStrategy": {
			"name": "camel.sink.endpoint.headerFilterStrategy",
			"description": "To use a custom HeaderFilterStrategy to map headers to\/from Camel.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.overrideEndpoint": {
			"name": "camel.sink.endpoint.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.protocol": {
			"name": "camel.sink.endpoint.protocol",
			"description": "The underlying protocol used to communicate with SQS",
			"defaultValue": "\"https\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the SQS client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.queueOwnerAWSAccountId": {
			"name": "camel.sink.endpoint.queueOwnerAWSAccountId",
			"description": "Specify the queue owner aws account id when you need to connect the queue with different account owner.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which SQS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.uriEndpointOverride": {
			"name": "camel.sink.endpoint.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.useDefaultCredentialsProvider": {
			"name": "camel.sink.endpoint.useDefaultCredentialsProvider",
			"description": "Set whether the SQS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.batchSeparator": {
			"name": "camel.sink.endpoint.batchSeparator",
			"description": "Set the separator when passing a String to send batch message operation",
			"defaultValue": "\",\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.delaySeconds": {
			"name": "camel.sink.endpoint.delaySeconds",
			"description": "Delay sending messages for a number of seconds.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.messageDeduplicationIdStrategy": {
			"name": "camel.sink.endpoint.messageDeduplicationIdStrategy",
			"description": "Only for FIFO queues. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message. One of: [useExchangeId] [useContentBasedDeduplication]",
			"defaultValue": "\"useExchangeId\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useExchangeId",
				"useContentBasedDeduplication"
			]
		},
		"camel.sink.endpoint.messageGroupIdStrategy": {
			"name": "camel.sink.endpoint.messageGroupIdStrategy",
			"description": "Only for FIFO queues. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used. One of: [useConstant] [useExchangeId] [usePropertyValue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useConstant",
				"useExchangeId",
				"usePropertyValue"
			]
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "The operation to do in case the user don't want to send only a message One of: [sendBatchMessage] [deleteMessage] [listQueues] [purgeQueue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"sendBatchMessage",
				"deleteMessage",
				"listQueues",
				"purgeQueue"
			]
		},
		"camel.sink.endpoint.delayQueue": {
			"name": "camel.sink.endpoint.delayQueue",
			"description": "Define if you want to apply delaySeconds option to the queue or on single messages",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.queueUrl": {
			"name": "camel.sink.endpoint.queueUrl",
			"description": "To define the queueUrl explicitly. All other parameters, which would influence the queueUrl, are ignored. This parameter is intended to be used, to connect to a mock implementation of SQS, for testing purposes.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the SQS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the SQS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.maximumMessageSize": {
			"name": "camel.sink.endpoint.maximumMessageSize",
			"description": "The maximumMessageSize (in bytes) an SQS message can contain for this queue.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.messageRetentionPeriod": {
			"name": "camel.sink.endpoint.messageRetentionPeriod",
			"description": "The messageRetentionPeriod (in seconds) a message will be retained by SQS for this queue.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.policy": {
			"name": "camel.sink.endpoint.policy",
			"description": "The policy for this queue. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.receiveMessageWaitTimeSeconds": {
			"name": "camel.sink.endpoint.receiveMessageWaitTimeSeconds",
			"description": "If you do not specify WaitTimeSeconds in the request, the queue attribute ReceiveMessageWaitTimeSeconds is used to determine how long to wait.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.redrivePolicy": {
			"name": "camel.sink.endpoint.redrivePolicy",
			"description": "Specify the policy that send message to DeadLetter queue. See detail at Amazon docs.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.amazonAWSHost": {
			"name": "camel.component.aws2-sqs.amazonAWSHost",
			"description": "The hostname of the Amazon AWS cloud.",
			"defaultValue": "\"amazonaws.com\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.amazonSQSClient": {
			"name": "camel.component.aws2-sqs.amazonSQSClient",
			"description": "To use the AmazonSQS as client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.autoCreateQueue": {
			"name": "camel.component.aws2-sqs.autoCreateQueue",
			"description": "Setting the autocreation of the queue",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.configuration": {
			"name": "camel.component.aws2-sqs.configuration",
			"description": "The AWS SQS default configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.overrideEndpoint": {
			"name": "camel.component.aws2-sqs.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.protocol": {
			"name": "camel.component.aws2-sqs.protocol",
			"description": "The underlying protocol used to communicate with SQS",
			"defaultValue": "\"https\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.proxyProtocol": {
			"name": "camel.component.aws2-sqs.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the SQS client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-sqs.queueOwnerAWSAccountId": {
			"name": "camel.component.aws2-sqs.queueOwnerAWSAccountId",
			"description": "Specify the queue owner aws account id when you need to connect the queue with different account owner.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.region": {
			"name": "camel.component.aws2-sqs.region",
			"description": "The region in which SQS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.trustAllCertificates": {
			"name": "camel.component.aws2-sqs.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.uriEndpointOverride": {
			"name": "camel.component.aws2-sqs.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.useDefaultCredentialsProvider": {
			"name": "camel.component.aws2-sqs.useDefaultCredentialsProvider",
			"description": "Set whether the SQS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.batchSeparator": {
			"name": "camel.component.aws2-sqs.batchSeparator",
			"description": "Set the separator when passing a String to send batch message operation",
			"defaultValue": "\",\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.delaySeconds": {
			"name": "camel.component.aws2-sqs.delaySeconds",
			"description": "Delay sending messages for a number of seconds.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.lazyStartProducer": {
			"name": "camel.component.aws2-sqs.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.messageDeduplicationIdStrategy": {
			"name": "camel.component.aws2-sqs.messageDeduplicationIdStrategy",
			"description": "Only for FIFO queues. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message. One of: [useExchangeId] [useContentBasedDeduplication]",
			"defaultValue": "\"useExchangeId\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useExchangeId",
				"useContentBasedDeduplication"
			]
		},
		"camel.component.aws2-sqs.messageGroupIdStrategy": {
			"name": "camel.component.aws2-sqs.messageGroupIdStrategy",
			"description": "Only for FIFO queues. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used. One of: [useConstant] [useExchangeId] [usePropertyValue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useConstant",
				"useExchangeId",
				"usePropertyValue"
			]
		},
		"camel.component.aws2-sqs.operation": {
			"name": "camel.component.aws2-sqs.operation",
			"description": "The operation to do in case the user don't want to send only a message One of: [sendBatchMessage] [deleteMessage] [listQueues] [purgeQueue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"sendBatchMessage",
				"deleteMessage",
				"listQueues",
				"purgeQueue"
			]
		},
		"camel.component.aws2-sqs.autowiredEnabled": {
			"name": "camel.component.aws2-sqs.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.delayQueue": {
			"name": "camel.component.aws2-sqs.delayQueue",
			"description": "Define if you want to apply delaySeconds option to the queue or on single messages",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.queueUrl": {
			"name": "camel.component.aws2-sqs.queueUrl",
			"description": "To define the queueUrl explicitly. All other parameters, which would influence the queueUrl, are ignored. This parameter is intended to be used, to connect to a mock implementation of SQS, for testing purposes.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.proxyHost": {
			"name": "camel.component.aws2-sqs.proxyHost",
			"description": "To define a proxy host when instantiating the SQS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.proxyPort": {
			"name": "camel.component.aws2-sqs.proxyPort",
			"description": "To define a proxy port when instantiating the SQS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.maximumMessageSize": {
			"name": "camel.component.aws2-sqs.maximumMessageSize",
			"description": "The maximumMessageSize (in bytes) an SQS message can contain for this queue.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.messageRetentionPeriod": {
			"name": "camel.component.aws2-sqs.messageRetentionPeriod",
			"description": "The messageRetentionPeriod (in seconds) a message will be retained by SQS for this queue.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.policy": {
			"name": "camel.component.aws2-sqs.policy",
			"description": "The policy for this queue. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.receiveMessageWaitTimeSeconds": {
			"name": "camel.component.aws2-sqs.receiveMessageWaitTimeSeconds",
			"description": "If you do not specify WaitTimeSeconds in the request, the queue attribute ReceiveMessageWaitTimeSeconds is used to determine how long to wait.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.redrivePolicy": {
			"name": "camel.component.aws2-sqs.redrivePolicy",
			"description": "Specify the policy that send message to DeadLetter queue. See detail at Amazon docs.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.accessKey": {
			"name": "camel.component.aws2-sqs.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sqs.secretKey": {
			"name": "camel.component.aws2-sqs.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	},
	"transforms": [
		"org.apache.camel.kafkaconnector.aws2sqs.transformers.SQSKeySetterTransforms"
	]
}