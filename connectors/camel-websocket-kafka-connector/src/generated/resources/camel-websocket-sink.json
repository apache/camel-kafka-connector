{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.websocket.CamelWebsocketSinkConnector",
		"artifactId": "camel-websocket-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-websocket-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Expose websocket endpoints using Jetty."
	},
	"properties": {
		"camel.sink.path.host": {
			"name": "camel.sink.path.host",
			"description": "The hostname. The default value is 0.0.0.0. Setting this option on the component will use the component configured value as default.",
			"defaultValue": "\"0.0.0.0\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.path.port": {
			"name": "camel.sink.path.port",
			"description": "The port number. The default value is 9292. Setting this option on the component will use the component configured value as default.",
			"defaultValue": "\"9292\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.path.resourceUri": {
			"name": "camel.sink.path.resourceUri",
			"description": "Name of the websocket channel to use",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.maxBinaryMessageSize": {
			"name": "camel.sink.endpoint.maxBinaryMessageSize",
			"description": "Can be used to set the size in bytes that the websocket created by the websocketServlet may be accept before closing. (Default is -1 - or unlimited)",
			"defaultValue": "\"-1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sendTimeout": {
			"name": "camel.sink.endpoint.sendTimeout",
			"description": "Timeout in millis when sending to a websocket channel. The default timeout is 30000 (30 seconds).",
			"defaultValue": "\"30000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sendToAll": {
			"name": "camel.sink.endpoint.sendToAll",
			"description": "To send to all websocket subscribers. Can be used to configure on endpoint level, instead of having to use the WebsocketConstants.SEND_TO_ALL header on the message.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.bufferSize": {
			"name": "camel.sink.endpoint.bufferSize",
			"description": "Set the buffer size of the websocketServlet, which is also the max frame byte size (default 8192)",
			"defaultValue": "\"8192\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.maxIdleTime": {
			"name": "camel.sink.endpoint.maxIdleTime",
			"description": "Set the time in ms that the websocket created by the websocketServlet may be idle before closing. (default is 300000)",
			"defaultValue": "\"300000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.maxTextMessageSize": {
			"name": "camel.sink.endpoint.maxTextMessageSize",
			"description": "Can be used to set the size in characters that the websocket created by the websocketServlet may be accept before closing.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.minVersion": {
			"name": "camel.sink.endpoint.minVersion",
			"description": "Can be used to set the minimum protocol version accepted for the websocketServlet. (Default 13 - the RFC6455 version)",
			"defaultValue": "\"13\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.allowedOrigins": {
			"name": "camel.sink.endpoint.allowedOrigins",
			"description": "The CORS allowed origins. Use to allow all.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.crossOriginFilterOn": {
			"name": "camel.sink.endpoint.crossOriginFilterOn",
			"description": "Whether to enable CORS",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.filterPath": {
			"name": "camel.sink.endpoint.filterPath",
			"description": "Context path for filtering CORS",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.enableJmx": {
			"name": "camel.sink.endpoint.enableJmx",
			"description": "If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sslContextParameters": {
			"name": "camel.sink.endpoint.sslContextParameters",
			"description": "To configure security using SSLContextParameters",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.host": {
			"name": "camel.component.websocket.host",
			"description": "The hostname. The default value is 0.0.0.0",
			"defaultValue": "\"0.0.0.0\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.port": {
			"name": "camel.component.websocket.port",
			"description": "The port number. The default value is 9292",
			"defaultValue": "\"9292\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.lazyStartProducer": {
			"name": "camel.component.websocket.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.autowiredEnabled": {
			"name": "camel.component.websocket.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.enableJmx": {
			"name": "camel.component.websocket.enableJmx",
			"description": "If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.maxThreads": {
			"name": "camel.component.websocket.maxThreads",
			"description": "To set a value for maximum number of threads in server thread pool. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9. The default values for maxThreads is 1 2 noCores.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.minThreads": {
			"name": "camel.component.websocket.minThreads",
			"description": "To set a value for minimum number of threads in server thread pool. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9. The default values for minThreads is 1.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.threadPool": {
			"name": "camel.component.websocket.threadPool",
			"description": "To use a custom thread pool for the server. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.sslContextParameters": {
			"name": "camel.component.websocket.sslContextParameters",
			"description": "To configure security using SSLContextParameters",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.sslKeyPassword": {
			"name": "camel.component.websocket.sslKeyPassword",
			"description": "The password for the keystore when using SSL.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.sslKeystore": {
			"name": "camel.component.websocket.sslKeystore",
			"description": "The path to the keystore.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.sslPassword": {
			"name": "camel.component.websocket.sslPassword",
			"description": "The password when using SSL.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.websocket.useGlobalSslContextParameters": {
			"name": "camel.component.websocket.useGlobalSslContextParameters",
			"description": "Enable usage of global SSL context parameters.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}