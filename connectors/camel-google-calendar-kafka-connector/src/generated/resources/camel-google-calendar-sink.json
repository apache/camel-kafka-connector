{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.googlecalendar.CamelGooglecalendarSinkConnector",
		"artifactId": "camel-google-calendar-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-google-calendar-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Perform various operations on a Google Calendar."
	},
	"properties": {
		"camel.sink.path.apiName": {
			"name": "camel.sink.path.apiName",
			"description": "What kind of operation to perform One of: [ACL] [LIST] [CALENDARS] [CHANNELS] [COLORS] [FREEBUSY] [EVENTS] [SETTINGS]",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"ACL",
				"LIST",
				"CALENDARS",
				"CHANNELS",
				"COLORS",
				"FREEBUSY",
				"EVENTS",
				"SETTINGS"
			]
		},
		"camel.sink.path.methodName": {
			"name": "camel.sink.path.methodName",
			"description": "What sub operation to use for the selected operation One of: [calendarImport] [clear] [delete] [get] [insert] [instances] [list] [move] [patch] [query] [quickAdd] [stop] [update] [watch]",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"calendarImport",
				"clear",
				"delete",
				"get",
				"insert",
				"instances",
				"list",
				"move",
				"patch",
				"query",
				"quickAdd",
				"stop",
				"update",
				"watch"
			]
		},
		"camel.sink.endpoint.applicationName": {
			"name": "camel.sink.endpoint.applicationName",
			"description": "Google calendar application name. Example would be camel-google-calendar\/1.0",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.clientId": {
			"name": "camel.sink.endpoint.clientId",
			"description": "Client ID of the calendar application",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.inBody": {
			"name": "camel.sink.endpoint.inBody",
			"description": "Sets the name of a parameter to be passed in the exchange In Body",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.scopes": {
			"name": "camel.sink.endpoint.scopes",
			"description": "Specifies the level of permissions you want a calendar application to have to a user account. You can separate multiple scopes by comma. See https:\/\/developers.google.com\/google-apps\/calendar\/auth for more info.",
			"defaultValue": "\"https:\/\/www.googleapis.com\/auth\/calendar\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessToken": {
			"name": "camel.sink.endpoint.accessToken",
			"description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.clientSecret": {
			"name": "camel.sink.endpoint.clientSecret",
			"description": "Client secret of the calendar application",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.emailAddress": {
			"name": "camel.sink.endpoint.emailAddress",
			"description": "The emailAddress of the Google Service Account.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.p12FileName": {
			"name": "camel.sink.endpoint.p12FileName",
			"description": "The name of the p12 file which has the private key to use with the Google Service Account.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.refreshToken": {
			"name": "camel.sink.endpoint.refreshToken",
			"description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.user": {
			"name": "camel.sink.endpoint.user",
			"description": "The email address of the user the application is trying to impersonate in the service account flow",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.applicationName": {
			"name": "camel.component.google-calendar.applicationName",
			"description": "Google calendar application name. Example would be camel-google-calendar\/1.0",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.clientId": {
			"name": "camel.component.google-calendar.clientId",
			"description": "Client ID of the calendar application",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.configuration": {
			"name": "camel.component.google-calendar.configuration",
			"description": "To use the shared configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.scopes": {
			"name": "camel.component.google-calendar.scopes",
			"description": "Specifies the level of permissions you want a calendar application to have to a user account. You can separate multiple scopes by comma. See https:\/\/developers.google.com\/google-apps\/calendar\/auth for more info.",
			"defaultValue": "\"https:\/\/www.googleapis.com\/auth\/calendar\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.lazyStartProducer": {
			"name": "camel.component.google-calendar.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.autowiredEnabled": {
			"name": "camel.component.google-calendar.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.clientFactory": {
			"name": "camel.component.google-calendar.clientFactory",
			"description": "To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleCalendarClientFactory",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.accessToken": {
			"name": "camel.component.google-calendar.accessToken",
			"description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.clientSecret": {
			"name": "camel.component.google-calendar.clientSecret",
			"description": "Client secret of the calendar application",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.emailAddress": {
			"name": "camel.component.google-calendar.emailAddress",
			"description": "The emailAddress of the Google Service Account.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.p12FileName": {
			"name": "camel.component.google-calendar.p12FileName",
			"description": "The name of the p12 file which has the private key to use with the Google Service Account.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.refreshToken": {
			"name": "camel.component.google-calendar.refreshToken",
			"description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-calendar.user": {
			"name": "camel.component.google-calendar.user",
			"description": "The email address of the user the application is trying to impersonate in the service account flow",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}