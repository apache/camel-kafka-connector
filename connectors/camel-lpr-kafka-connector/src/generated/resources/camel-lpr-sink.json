{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.lpr.CamelLprSinkConnector",
		"artifactId": "camel-lpr-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-lpr-sink",
		"type": "sink",
		"version": "0.7.0-SNAPSHOT",
		"description": "Send print jobs to printers."
	},
	"properties": {
		"camel.sink.path.hostname": {
			"name": "camel.sink.path.hostname",
			"description": "Hostname of the printer",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.path.port": {
			"name": "camel.sink.path.port",
			"description": "Port number of the printer",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.path.printername": {
			"name": "camel.sink.path.printername",
			"description": "Name of the printer",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.copies": {
			"name": "camel.sink.endpoint.copies",
			"description": "Number of copies to print",
			"defaultValue": "1",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.docFlavor": {
			"name": "camel.sink.endpoint.docFlavor",
			"description": "Sets DocFlavor to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.flavor": {
			"name": "camel.sink.endpoint.flavor",
			"description": "Sets DocFlavor to use.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.mediaSize": {
			"name": "camel.sink.endpoint.mediaSize",
			"description": "Sets the stationary as defined by enumeration names in the javax.print.attribute.standard.MediaSizeName API. The default setting is to use North American Letter sized stationary. The value's case is ignored, e.g. values of iso_a4 and ISO_A4 may be used.",
			"defaultValue": "\"na-letter\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.mediaTray": {
			"name": "camel.sink.endpoint.mediaTray",
			"description": "Sets MediaTray supported by the javax.print.DocFlavor API, for example upper,middle etc.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.mimeType": {
			"name": "camel.sink.endpoint.mimeType",
			"description": "Sets mimeTypes supported by the javax.print.DocFlavor API",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.orientation": {
			"name": "camel.sink.endpoint.orientation",
			"description": "Sets the page orientation. One of: [portrait] [landscape] [reverse-portrait] [reverse-landscape]",
			"defaultValue": "\"portrait\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"portrait",
				"landscape",
				"reverse-portrait",
				"reverse-landscape"
			]
		},
		"camel.sink.endpoint.printerPrefix": {
			"name": "camel.sink.endpoint.printerPrefix",
			"description": "Sets the prefix name of the printer, it is useful when the printer name does not start with \/\/hostname\/printer",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sendToPrinter": {
			"name": "camel.sink.endpoint.sendToPrinter",
			"description": "etting this option to false prevents sending of the print data to the printer",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sides": {
			"name": "camel.sink.endpoint.sides",
			"description": "Sets one sided or two sided printing based on the javax.print.attribute.standard.Sides API One of: [one-sided] [duplex] [tumble] [two-sided-short-edge] [two-sided-long-edge]",
			"defaultValue": "\"one-sided\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"one-sided",
				"duplex",
				"tumble",
				"two-sided-short-edge",
				"two-sided-long-edge"
			]
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.lpr.lazyStartProducer": {
			"name": "camel.component.lpr.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.lpr.basicPropertyBinding": {
			"name": "camel.component.lpr.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "LOW",
			"required": "false"
		}
	}
}