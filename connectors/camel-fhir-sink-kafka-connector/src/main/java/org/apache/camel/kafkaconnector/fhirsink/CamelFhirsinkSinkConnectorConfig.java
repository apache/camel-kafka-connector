/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */package org.apache.camel.kafkaconnector.fhirsink;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSinkConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelFhirsinkSinkConnectorConfig
        extends
            CamelSinkConnectorConfig {

    public static final String CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_CONF = "camel.kamelet.fhir-sink.apiName";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_DOC = "What kind of operation to perform";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_CONF = "camel.kamelet.fhir-sink.methodName";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_DOC = "What sub operation to use for the selected operation.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_CONF = "camel.kamelet.fhir-sink.encoding";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_DOC = "Encoding to use for all request. One of: [JSON] [XML].";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_DEFAULT = "JSON";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_CONF = "camel.kamelet.fhir-sink.fhirVersion";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_DOC = "The FHIR Version to use.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_DEFAULT = "R4";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_LOG_CONF = "camel.kamelet.fhir-sink.log";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_LOG_DOC = "Will log every requests and responses.";
    public static final Boolean CAMEL_SINK_FHIRSINK_KAMELET_LOG_DEFAULT = false;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_CONF = "camel.kamelet.fhir-sink.prettyPrint";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_DOC = "Pretty print all request.";
    public static final Boolean CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_DEFAULT = false;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_CONF = "camel.kamelet.fhir-sink.serverUrl";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_DOC = "The FHIR server base URL.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_CONF = "camel.kamelet.fhir-sink.lazyStartProducer";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_DOC = "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camelâ€™s routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.";
    public static final Boolean CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_DEFAULT = false;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_CONF = "camel.kamelet.fhir-sink.proxyHost";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_DOC = "The proxy host.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_CONF = "camel.kamelet.fhir-sink.proxyPassword";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_DOC = "The proxy password.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_CONF = "camel.kamelet.fhir-sink.proxyPort";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_DOC = "The proxy port.";
    public static final Integer CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_CONF = "camel.kamelet.fhir-sink.proxyUser";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_DOC = "The proxy username.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_CONF = "camel.kamelet.fhir-sink.accessToken";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_DOC = "OAuth access token.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_CONF = "camel.kamelet.fhir-sink.username";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_DOC = "Username to use for basic authentication.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_DEFAULT = null;
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_CONF = "camel.kamelet.fhir-sink.password";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_DOC = "Password to use for basic authentication.";
    public static final String CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_DEFAULT = null;

    public CamelFhirsinkSinkConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelFhirsinkSinkConnectorConfig(Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSinkConnectorConfig.conf());
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_API_NAME_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SINK_FHIRSINK_KAMELET_METHOD_NAME_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_ENCODING_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_FHIR_VERSION_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_LOG_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_FHIRSINK_KAMELET_LOG_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_LOG_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PRETTY_PRINT_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SINK_FHIRSINK_KAMELET_SERVER_URL_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_LAZY_START_PRODUCER_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_HOST_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_CONF, ConfigDef.Type.PASSWORD, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PASSWORD_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_CONF, ConfigDef.Type.INT, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_PORT_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PROXY_USER_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_CONF, ConfigDef.Type.PASSWORD, CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_ACCESS_TOKEN_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_USERNAME_DOC);
        conf.define(CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_CONF, ConfigDef.Type.PASSWORD, CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_FHIRSINK_KAMELET_PASSWORD_DOC);
        return conf;
    }
}