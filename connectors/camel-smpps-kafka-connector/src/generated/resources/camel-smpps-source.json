{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.smpps.CamelSmppsSourceConnector",
		"artifactId": "camel-smpps-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-smpps-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send and receive SMS messages using a SMSC (Short Message Service Center)."
	},
	"properties": {
		"camel.source.path.host": {
			"name": "camel.source.path.host",
			"description": "Hostname for the SMSC server to use.",
			"defaultValue": "\"localhost\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.path.port": {
			"name": "camel.source.path.port",
			"description": "Port number for the SMSC server to use.",
			"defaultValue": "\"2775\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.initialReconnectDelay": {
			"name": "camel.source.endpoint.initialReconnectDelay",
			"description": "Defines the initial delay in milliseconds after the consumer\/producer tries to reconnect to the SMSC, after the connection was lost.",
			"defaultValue": "5000L",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.maxReconnect": {
			"name": "camel.source.endpoint.maxReconnect",
			"description": "Defines the maximum number of attempts to reconnect to the SMSC, if SMSC returns a negative bind response",
			"defaultValue": "2147483647",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.reconnectDelay": {
			"name": "camel.source.endpoint.reconnectDelay",
			"description": "Defines the interval in milliseconds between the reconnect attempts, if the connection to the SMSC was lost and the previous was not succeed.",
			"defaultValue": "5000L",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.splittingPolicy": {
			"name": "camel.source.endpoint.splittingPolicy",
			"description": "You can specify a policy for handling long messages: ALLOW - the default, long messages are split to 140 bytes per message TRUNCATE - long messages are split and only the first fragment will be sent to the SMSC. Some carriers drop subsequent fragments so this reduces load on the SMPP connection sending parts of a message that will never be delivered. REJECT - if a message would need to be split, it is rejected with an SMPP NegativeResponseException and the reason code signifying the message is too long. One of: [ALLOW] [REJECT] [TRUNCATE]",
			"defaultValue": "\"ALLOW\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"ALLOW",
				"REJECT",
				"TRUNCATE"
			]
		},
		"camel.source.endpoint.systemType": {
			"name": "camel.source.endpoint.systemType",
			"description": "This parameter is used to categorize the type of ESME (External Short Message Entity) that is binding to the SMSC (max. 13 characters).",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.addressRange": {
			"name": "camel.source.endpoint.addressRange",
			"description": "You can specify the address range for the SmppConsumer as defined in section 5.2.7 of the SMPP 3.4 specification. The SmppConsumer will receive messages only from SMSC's which target an address (MSISDN or IP address) within this range.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.source.endpoint.enquireLinkTimer": {
			"name": "camel.source.endpoint.enquireLinkTimer",
			"description": "Defines the interval in milliseconds between the confidence checks. The confidence check is used to test the communication path between an ESME and an SMSC.",
			"defaultValue": "\"60000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.sessionStateListener": {
			"name": "camel.source.endpoint.sessionStateListener",
			"description": "You can refer to a org.jsmpp.session.SessionStateListener in the Registry to receive callbacks when the session state changed.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.transactionTimer": {
			"name": "camel.source.endpoint.transactionTimer",
			"description": "Defines the maximum period of inactivity allowed after a transaction, after which an SMPP entity may assume that the session is no longer active. This timer may be active on either communicating SMPP entity (i.e. SMSC or ESME).",
			"defaultValue": "\"10000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.alphabet": {
			"name": "camel.source.endpoint.alphabet",
			"description": "Defines encoding of data according the SMPP 3.4 specification, section 5.2.19. 0: SMSC Default Alphabet 4: 8 bit Alphabet 8: UCS2 Alphabet One of: [0] [4] [8]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"0",
				"4",
				"8"
			]
		},
		"camel.source.endpoint.dataCoding": {
			"name": "camel.source.endpoint.dataCoding",
			"description": "Defines the data coding according the SMPP 3.4 specification, section 5.2.19. Example data encodings are: 0: SMSC Default Alphabet 3: Latin 1 (ISO-8859-1) 4: Octet unspecified (8-bit binary) 8: UCS2 (ISO\/IEC-10646) 13: Extended Kanji JIS(X 0212-1990)",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.encoding": {
			"name": "camel.source.endpoint.encoding",
			"description": "Defines the encoding scheme of the short message user data. Only for SubmitSm, ReplaceSm and SubmitMulti.",
			"defaultValue": "\"ISO-8859-1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.httpProxyHost": {
			"name": "camel.source.endpoint.httpProxyHost",
			"description": "If you need to tunnel SMPP through a HTTP proxy, set this attribute to the hostname or ip address of your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.httpProxyPassword": {
			"name": "camel.source.endpoint.httpProxyPassword",
			"description": "If your HTTP proxy requires basic authentication, set this attribute to the password required for your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.httpProxyPort": {
			"name": "camel.source.endpoint.httpProxyPort",
			"description": "If you need to tunnel SMPP through a HTTP proxy, set this attribute to the port of your HTTP proxy.",
			"defaultValue": "\"3128\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.httpProxyUsername": {
			"name": "camel.source.endpoint.httpProxyUsername",
			"description": "If your HTTP proxy requires basic authentication, set this attribute to the username required for your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.proxyHeaders": {
			"name": "camel.source.endpoint.proxyHeaders",
			"description": "These headers will be passed to the proxy server while establishing the connection.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.password": {
			"name": "camel.source.endpoint.password",
			"description": "The password for connecting to SMSC server.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.systemId": {
			"name": "camel.source.endpoint.systemId",
			"description": "The system id (username) for connecting to SMSC server.",
			"defaultValue": "\"smppclient\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.usingSSL": {
			"name": "camel.source.endpoint.usingSSL",
			"description": "Whether using SSL with the smpps protocol",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.initialReconnectDelay": {
			"name": "camel.component.smpps.initialReconnectDelay",
			"description": "Defines the initial delay in milliseconds after the consumer\/producer tries to reconnect to the SMSC, after the connection was lost.",
			"defaultValue": "5000L",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.maxReconnect": {
			"name": "camel.component.smpps.maxReconnect",
			"description": "Defines the maximum number of attempts to reconnect to the SMSC, if SMSC returns a negative bind response",
			"defaultValue": "2147483647",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.reconnectDelay": {
			"name": "camel.component.smpps.reconnectDelay",
			"description": "Defines the interval in milliseconds between the reconnect attempts, if the connection to the SMSC was lost and the previous was not succeed.",
			"defaultValue": "5000L",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.splittingPolicy": {
			"name": "camel.component.smpps.splittingPolicy",
			"description": "You can specify a policy for handling long messages: ALLOW - the default, long messages are split to 140 bytes per message TRUNCATE - long messages are split and only the first fragment will be sent to the SMSC. Some carriers drop subsequent fragments so this reduces load on the SMPP connection sending parts of a message that will never be delivered. REJECT - if a message would need to be split, it is rejected with an SMPP NegativeResponseException and the reason code signifying the message is too long. One of: [ALLOW] [REJECT] [TRUNCATE]",
			"defaultValue": "\"ALLOW\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"ALLOW",
				"REJECT",
				"TRUNCATE"
			]
		},
		"camel.component.smpps.systemType": {
			"name": "camel.component.smpps.systemType",
			"description": "This parameter is used to categorize the type of ESME (External Short Message Entity) that is binding to the SMSC (max. 13 characters).",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.addressRange": {
			"name": "camel.component.smpps.addressRange",
			"description": "You can specify the address range for the SmppConsumer as defined in section 5.2.7 of the SMPP 3.4 specification. The SmppConsumer will receive messages only from SMSC's which target an address (MSISDN or IP address) within this range.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.bridgeErrorHandler": {
			"name": "camel.component.smpps.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.autowiredEnabled": {
			"name": "camel.component.smpps.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.configuration": {
			"name": "camel.component.smpps.configuration",
			"description": "To use the shared SmppConfiguration as configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.enquireLinkTimer": {
			"name": "camel.component.smpps.enquireLinkTimer",
			"description": "Defines the interval in milliseconds between the confidence checks. The confidence check is used to test the communication path between an ESME and an SMSC.",
			"defaultValue": "\"60000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.sessionStateListener": {
			"name": "camel.component.smpps.sessionStateListener",
			"description": "You can refer to a org.jsmpp.session.SessionStateListener in the Registry to receive callbacks when the session state changed.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.transactionTimer": {
			"name": "camel.component.smpps.transactionTimer",
			"description": "Defines the maximum period of inactivity allowed after a transaction, after which an SMPP entity may assume that the session is no longer active. This timer may be active on either communicating SMPP entity (i.e. SMSC or ESME).",
			"defaultValue": "\"10000\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.alphabet": {
			"name": "camel.component.smpps.alphabet",
			"description": "Defines encoding of data according the SMPP 3.4 specification, section 5.2.19. 0: SMSC Default Alphabet 4: 8 bit Alphabet 8: UCS2 Alphabet One of: [0] [4] [8]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"0",
				"4",
				"8"
			]
		},
		"camel.component.smpps.dataCoding": {
			"name": "camel.component.smpps.dataCoding",
			"description": "Defines the data coding according the SMPP 3.4 specification, section 5.2.19. Example data encodings are: 0: SMSC Default Alphabet 3: Latin 1 (ISO-8859-1) 4: Octet unspecified (8-bit binary) 8: UCS2 (ISO\/IEC-10646) 13: Extended Kanji JIS(X 0212-1990)",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.encoding": {
			"name": "camel.component.smpps.encoding",
			"description": "Defines the encoding scheme of the short message user data. Only for SubmitSm, ReplaceSm and SubmitMulti.",
			"defaultValue": "\"ISO-8859-1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.httpProxyHost": {
			"name": "camel.component.smpps.httpProxyHost",
			"description": "If you need to tunnel SMPP through a HTTP proxy, set this attribute to the hostname or ip address of your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.httpProxyPassword": {
			"name": "camel.component.smpps.httpProxyPassword",
			"description": "If your HTTP proxy requires basic authentication, set this attribute to the password required for your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.httpProxyPort": {
			"name": "camel.component.smpps.httpProxyPort",
			"description": "If you need to tunnel SMPP through a HTTP proxy, set this attribute to the port of your HTTP proxy.",
			"defaultValue": "\"3128\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.httpProxyUsername": {
			"name": "camel.component.smpps.httpProxyUsername",
			"description": "If your HTTP proxy requires basic authentication, set this attribute to the username required for your HTTP proxy.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.proxyHeaders": {
			"name": "camel.component.smpps.proxyHeaders",
			"description": "These headers will be passed to the proxy server while establishing the connection.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.password": {
			"name": "camel.component.smpps.password",
			"description": "The password for connecting to SMSC server.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.systemId": {
			"name": "camel.component.smpps.systemId",
			"description": "The system id (username) for connecting to SMSC server.",
			"defaultValue": "\"smppclient\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.smpps.usingSSL": {
			"name": "camel.component.smpps.usingSSL",
			"description": "Whether using SSL with the smpps protocol",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}