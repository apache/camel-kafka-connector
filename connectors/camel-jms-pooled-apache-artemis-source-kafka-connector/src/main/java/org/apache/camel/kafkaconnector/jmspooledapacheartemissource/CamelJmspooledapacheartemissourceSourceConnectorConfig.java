/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.kafkaconnector.jmspooledapacheartemissource;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSourceConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelJmspooledapacheartemissourceSourceConnectorConfig
        extends
            CamelSourceConnectorConfig {

    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.destinationType";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_DOC = "The JMS destination type (queue or topic).";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_DEFAULT = "queue";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.destinationName";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_DOC = "The JMS destination name.";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLCONF = "camel.kamelet.jms-pooled-apache-artemis-source.brokerURL";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLDOC = "The JMS URL. Example: tcp://my-host:61616";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLDEFAULT = null;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.username";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_DOC = "The JMS Broker Username.";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.password";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_DOC = "The JMS Broker Password.";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_DEFAULT = null;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.maxSessionsPerConnection";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_DOC = "The maximum number of pooled sessions per connection in the pool";
    public static final Integer CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_DEFAULT = 500;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.maxIdleSessionsPerConnection";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_DOC = "The number of idle sessions allowed per connection before they are closed.";
    public static final Integer CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_DEFAULT = 500;
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_CONF = "camel.kamelet.jms-pooled-apache-artemis-source.connectionIdleTimeout";
    public static final String CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_DOC = "The maximum time a pooled Connection can sit unused before it is eligible for removal (in milliseconds)";
    public static final Integer CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_DEFAULT = 30000;

    public CamelJmspooledapacheartemissourceSourceConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelJmspooledapacheartemissourceSourceConnectorConfig(
            Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSourceConnectorConfig.conf());
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_TYPE_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_DESTINATION_NAME_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLCONF, ConfigDef.Type.STRING, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLDEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_BROKER_URLDOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_USERNAME_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_PASSWORD_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_SESSIONS_PER_CONNECTION_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_MAX_IDLE_SESSIONS_PER_CONNECTION_DOC);
        conf.define(CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_JMSPOOLEDAPACHEARTEMISSOURCE_KAMELET_CONNECTION_IDLE_TIMEOUT_DOC);
        return conf;
    }
}