{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.kafkabatchsslsource.CamelKafkabatchsslsourceSourceConnector",
		"artifactId": "camel-kafka-batch-ssl-source-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-kafka-batch-ssl-source-source",
		"type": "source",
		"version": "4.4.3-SNAPSHOT",
		"description": "Receive data from Kafka topics in batch with SSL\/TLS support and commit them manually through KafkaManualCommit or automatically."
	},
	"properties": {
		"camel.kamelet.kafka-batch-ssl-source.topic": {
			"name": "camel.kamelet.kafka-batch-ssl-source.topic",
			"description": "Comma separated list of Kafka topic names",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-ssl-source.bootstrapServers": {
			"name": "camel.kamelet.kafka-batch-ssl-source.bootstrapServers",
			"description": "Comma separated list of Kafka Broker URLs",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-ssl-source.securityProtocol": {
			"name": "camel.kamelet.kafka-batch-ssl-source.securityProtocol",
			"description": "Protocol used to communicate with brokers. SASL_PLAINTEXT, PLAINTEXT, SASL_SSL and SSL are supported",
			"defaultValue": "\"SSL\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.saslMechanism": {
			"name": "camel.kamelet.kafka-batch-ssl-source.saslMechanism",
			"description": "The Simple Authentication and Security Layer (SASL) Mechanism used.",
			"defaultValue": "\"GSSAPI\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.autoCommitEnable": {
			"name": "camel.kamelet.kafka-batch-ssl-source.autoCommitEnable",
			"description": "If true, periodically commit to ZooKeeper the offset of messages already fetched by the consumer",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.allowManualCommit": {
			"name": "camel.kamelet.kafka-batch-ssl-source.allowManualCommit",
			"description": "Whether to allow doing manual commits",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.pollOnError": {
			"name": "camel.kamelet.kafka-batch-ssl-source.pollOnError",
			"description": "What to do if kafka threw an exception while polling for new messages. There are 5 enums and the value can be one of DISCARD, ERROR_HANDLER, RECONNECT, RETRY, STOP",
			"defaultValue": "\"ERROR_HANDLER\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.autoOffsetReset": {
			"name": "camel.kamelet.kafka-batch-ssl-source.autoOffsetReset",
			"description": "What to do when there is no initial offset. There are 3 enums and the value can be one of latest, earliest, none",
			"defaultValue": "\"latest\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.consumerGroup": {
			"name": "camel.kamelet.kafka-batch-ssl-source.consumerGroup",
			"description": "A string that uniquely identifies the group of consumers to which this source belongs Example: my-group-id",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.deserializeHeaders": {
			"name": "camel.kamelet.kafka-batch-ssl-source.deserializeHeaders",
			"description": "When enabled the Kamelet source will deserialize all message headers to String representation.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslKeyPassword": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslKeyPassword",
			"description": "The password of the private key in the key store file.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslKeystorePassword": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslKeystorePassword",
			"description": "The store password for the key store file.This is optional for client and only needed if ssl.keystore.location is configured.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslEndpointAlgorithm": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslEndpointAlgorithm",
			"description": "The endpoint identification algorithm to validate server hostname using server certificate. Use none or false to disable server hostname verification.",
			"defaultValue": "\"https\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslProtocol": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslProtocol",
			"description": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.",
			"defaultValue": "\"TLSv1.2\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslKeystoreLocation": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslKeystoreLocation",
			"description": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslTruststoreLocation": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslTruststoreLocation",
			"description": "The location of the trust store file.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-ssl-source.sslEnabledProtocols": {
			"name": "camel.kamelet.kafka-batch-ssl-source.sslEnabledProtocols",
			"description": "The list of protocols enabled for SSL connections. TLSv1.2, TLSv1.1 and TLSv1 are enabled by default.",
			"defaultValue": "\"TLSv1.2,TLSv1.1,TLSv1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.saslJaasConfig": {
			"name": "camel.kamelet.kafka-batch-ssl-source.saslJaasConfig",
			"description": "Java Authentication and Authorization Service (JAAS) for Simple Authentication and Security Layer (SASL) configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.batchSize": {
			"name": "camel.kamelet.kafka-batch-ssl-source.batchSize",
			"description": "The maximum number of records returned in a single call to poll()",
			"defaultValue": "500",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.pollTimeout": {
			"name": "camel.kamelet.kafka-batch-ssl-source.pollTimeout",
			"description": "The timeout used when polling the KafkaConsumer",
			"defaultValue": "5000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-ssl-source.maxPollIntervalMs": {
			"name": "camel.kamelet.kafka-batch-ssl-source.maxPollIntervalMs",
			"description": "The maximum delay between invocations of poll() when using consumer group management",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}