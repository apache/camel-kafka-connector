{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.vertxwebsocket.CamelVertxwebsocketSourceConnector",
		"artifactId": "camel-vertx-websocket",
		"groupId": "org.apache.camel",
		"title": "camel-vertx-websocket",
		"version": "0.6.0-SNAPSHOT"
	},
	"properties": {
		"camel.source.path.host": {
			"name": "camel.source.path.host",
			"description": "The host that the consumer should bind to or the host of the remote websocket destination that the producer should connect to",
			"defaultValue": "\"0.0.0.0\"",
			"priority": "MEDIUM"
		},
		"camel.source.path.port": {
			"name": "camel.source.path.port",
			"description": "The port that the consumer should bind to or port of the remote websocket destination that the producer should connect to",
			"defaultValue": "0",
			"priority": "MEDIUM"
		},
		"camel.source.path.path": {
			"name": "camel.source.path.path",
			"description": "The path that the consumer should bind to or path of the remote websocket destination that the producer should connect to",
			"defaultValue": "\"\/\"",
			"priority": "HIGH"
		},
		"camel.source.endpoint.allowedOriginPattern": {
			"name": "camel.source.endpoint.allowedOriginPattern",
			"description": "Regex pattern to match the origin header sent by WebSocket clients",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.router": {
			"name": "camel.source.endpoint.router",
			"description": "To use an existing vertx router for the HTTP server",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.serverOptions": {
			"name": "camel.source.endpoint.serverOptions",
			"description": "Sets customized options for configuring the HTTP server hosting the WebSocket for the consumer",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.basicPropertyBinding": {
			"name": "camel.source.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.synchronous": {
			"name": "camel.source.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.sslContextParameters": {
			"name": "camel.source.endpoint.sslContextParameters",
			"description": "To configure security using SSLContextParameters",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.component.vertx-websocket.bridgeErrorHandler": {
			"name": "camel.component.vertx-websocket.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.vertx-websocket.basicPropertyBinding": {
			"name": "camel.component.vertx-websocket.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.vertx-websocket.vertx": {
			"name": "camel.component.vertx-websocket.vertx",
			"description": "To use an existing vertx instead of creating a new instance",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.component.vertx-websocket.vertxOptions": {
			"name": "camel.component.vertx-websocket.vertxOptions",
			"description": "To provide a custom set of vertx options for configuring vertx",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.component.vertx-websocket.useGlobalSslContextParameters": {
			"name": "camel.component.vertx-websocket.useGlobalSslContextParameters",
			"description": "Enable usage of global SSL context parameters.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		}
	}
}
