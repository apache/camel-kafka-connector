{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2sns.CamelAws2snsSinkConnector",
		"artifactId": "camel-aws2-sns-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-sns-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send messages to an AWS Simple Notification Topic using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.topicNameOrArn": {
			"name": "camel.sink.path.topicNameOrArn",
			"description": "Topic name or ARN",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.amazonSNSClient": {
			"name": "camel.sink.endpoint.amazonSNSClient",
			"description": "To use the AmazonSNS as the client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.autoCreateTopic": {
			"name": "camel.sink.endpoint.autoCreateTopic",
			"description": "Setting the autocreation of the topic",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.headerFilterStrategy": {
			"name": "camel.sink.endpoint.headerFilterStrategy",
			"description": "To use a custom HeaderFilterStrategy to map headers to\/from Camel.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.kmsMasterKeyId": {
			"name": "camel.sink.endpoint.kmsMasterKeyId",
			"description": "The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.messageDeduplicationIdStrategy": {
			"name": "camel.sink.endpoint.messageDeduplicationIdStrategy",
			"description": "Only for FIFO Topic. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message. One of: [useExchangeId] [useContentBasedDeduplication]",
			"defaultValue": "\"useExchangeId\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useExchangeId",
				"useContentBasedDeduplication"
			]
		},
		"camel.sink.endpoint.messageGroupIdStrategy": {
			"name": "camel.sink.endpoint.messageGroupIdStrategy",
			"description": "Only for FIFO Topic. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used. One of: [useConstant] [useExchangeId] [usePropertyValue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useConstant",
				"useExchangeId",
				"usePropertyValue"
			]
		},
		"camel.sink.endpoint.messageStructure": {
			"name": "camel.sink.endpoint.messageStructure",
			"description": "The message structure to use such as json",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.overrideEndpoint": {
			"name": "camel.sink.endpoint.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.policy": {
			"name": "camel.sink.endpoint.policy",
			"description": "The policy for this topic. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the SNS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the SNS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the SNS client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.queueUrl": {
			"name": "camel.sink.endpoint.queueUrl",
			"description": "The queueUrl to subscribe to",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which SNS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.serverSideEncryptionEnabled": {
			"name": "camel.sink.endpoint.serverSideEncryptionEnabled",
			"description": "Define if Server Side Encryption is enabled or not on the topic",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.subject": {
			"name": "camel.sink.endpoint.subject",
			"description": "The subject which is used if the message header 'CamelAwsSnsSubject' is not present.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.subscribeSNStoSQS": {
			"name": "camel.sink.endpoint.subscribeSNStoSQS",
			"description": "Define if the subscription between SNS Topic and SQS must be done or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.uriEndpointOverride": {
			"name": "camel.sink.endpoint.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.useDefaultCredentialsProvider": {
			"name": "camel.sink.endpoint.useDefaultCredentialsProvider",
			"description": "Set whether the SNS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.amazonSNSClient": {
			"name": "camel.component.aws2-sns.amazonSNSClient",
			"description": "To use the AmazonSNS as the client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.autoCreateTopic": {
			"name": "camel.component.aws2-sns.autoCreateTopic",
			"description": "Setting the autocreation of the topic",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.configuration": {
			"name": "camel.component.aws2-sns.configuration",
			"description": "Component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.kmsMasterKeyId": {
			"name": "camel.component.aws2-sns.kmsMasterKeyId",
			"description": "The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.lazyStartProducer": {
			"name": "camel.component.aws2-sns.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.messageDeduplicationIdStrategy": {
			"name": "camel.component.aws2-sns.messageDeduplicationIdStrategy",
			"description": "Only for FIFO Topic. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message. One of: [useExchangeId] [useContentBasedDeduplication]",
			"defaultValue": "\"useExchangeId\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useExchangeId",
				"useContentBasedDeduplication"
			]
		},
		"camel.component.aws2-sns.messageGroupIdStrategy": {
			"name": "camel.component.aws2-sns.messageGroupIdStrategy",
			"description": "Only for FIFO Topic. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used. One of: [useConstant] [useExchangeId] [usePropertyValue]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"useConstant",
				"useExchangeId",
				"usePropertyValue"
			]
		},
		"camel.component.aws2-sns.messageStructure": {
			"name": "camel.component.aws2-sns.messageStructure",
			"description": "The message structure to use such as json",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.overrideEndpoint": {
			"name": "camel.component.aws2-sns.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.policy": {
			"name": "camel.component.aws2-sns.policy",
			"description": "The policy for this topic. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.proxyHost": {
			"name": "camel.component.aws2-sns.proxyHost",
			"description": "To define a proxy host when instantiating the SNS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.proxyPort": {
			"name": "camel.component.aws2-sns.proxyPort",
			"description": "To define a proxy port when instantiating the SNS client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.proxyProtocol": {
			"name": "camel.component.aws2-sns.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the SNS client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-sns.queueUrl": {
			"name": "camel.component.aws2-sns.queueUrl",
			"description": "The queueUrl to subscribe to",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.region": {
			"name": "camel.component.aws2-sns.region",
			"description": "The region in which SNS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.serverSideEncryptionEnabled": {
			"name": "camel.component.aws2-sns.serverSideEncryptionEnabled",
			"description": "Define if Server Side Encryption is enabled or not on the topic",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.subject": {
			"name": "camel.component.aws2-sns.subject",
			"description": "The subject which is used if the message header 'CamelAwsSnsSubject' is not present.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.subscribeSNStoSQS": {
			"name": "camel.component.aws2-sns.subscribeSNStoSQS",
			"description": "Define if the subscription between SNS Topic and SQS must be done or not",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.trustAllCertificates": {
			"name": "camel.component.aws2-sns.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.uriEndpointOverride": {
			"name": "camel.component.aws2-sns.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.useDefaultCredentialsProvider": {
			"name": "camel.component.aws2-sns.useDefaultCredentialsProvider",
			"description": "Set whether the SNS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.autowiredEnabled": {
			"name": "camel.component.aws2-sns.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.accessKey": {
			"name": "camel.component.aws2-sns.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-sns.secretKey": {
			"name": "camel.component.aws2-sns.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}