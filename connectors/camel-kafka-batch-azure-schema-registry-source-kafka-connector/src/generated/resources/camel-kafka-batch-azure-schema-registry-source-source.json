{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.kafkabatchazureschemaregistrysource.CamelKafkabatchazureschemaregistrysourceSourceConnector",
		"artifactId": "camel-kafka-batch-azure-schema-registry-source-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-kafka-batch-azure-schema-registry-source-source",
		"type": "source",
		"version": "4.4.4-SNAPSHOT",
		"description": "Receive data from Kafka topics in batch on Azure Eventhubs combined with Azure Schema Registry and commit them manually through KafkaManualCommit or auto commit."
	},
	"properties": {
		"camel.kamelet.kafka-batch-azure-schema-registry-source.topic": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.topic",
			"description": "Comma separated list of Kafka topic names",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.bootstrapServers": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.bootstrapServers",
			"description": "Comma separated list of Kafka Broker URLs",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.securityProtocol": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.securityProtocol",
			"description": "Protocol used to communicate with brokers. SASL_PLAINTEXT, PLAINTEXT, SASL_SSL and SSL are supported",
			"defaultValue": "\"SASL_SSL\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.saslMechanism": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.saslMechanism",
			"description": "The Simple Authentication and Security Layer (SASL) Mechanism used.",
			"defaultValue": "\"PLAIN\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.password": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.password",
			"description": "Password to authenticate to kafka",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.autoCommitEnable": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.autoCommitEnable",
			"description": "If true, periodically commit to ZooKeeper the offset of messages already fetched by the consumer",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.allowManualCommit": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.allowManualCommit",
			"description": "Whether to allow doing manual commits",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.pollOnError": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.pollOnError",
			"description": "What to do if kafka threw an exception while polling for new messages. There are 5 enums and the value can be one of DISCARD, ERROR_HANDLER, RECONNECT, RETRY, STOP",
			"defaultValue": "\"ERROR_HANDLER\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.autoOffsetReset": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.autoOffsetReset",
			"description": "What to do when there is no initial offset. There are 3 enums and the value can be one of latest, earliest, none",
			"defaultValue": "\"latest\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.consumerGroup": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.consumerGroup",
			"description": "A string that uniquely identifies the group of consumers to which this source belongs Example: my-group-id",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.deserializeHeaders": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.deserializeHeaders",
			"description": "When enabled the Kamelet source will deserialize all message headers to String representation.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.valueDeserializer": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.valueDeserializer",
			"description": "Deserializer class for value that implements the Deserializer interface.",
			"defaultValue": "\"com.microsoft.azure.schemaregistry.kafka.avro.KafkaAvroDeserializer\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.azureRegistryUrl": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.azureRegistryUrl",
			"description": "The Apicurio Schema Registry URL",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.specificAvroValueType": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.specificAvroValueType",
			"description": "The Specific Type Avro will have to deal with Example: com.example.Order",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.batchSize": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.batchSize",
			"description": "The maximum number of records returned in a single call to poll()",
			"defaultValue": "500",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.pollTimeout": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.pollTimeout",
			"description": "The timeout used when polling the KafkaConsumer",
			"defaultValue": "5000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.kafka-batch-azure-schema-registry-source.maxPollIntervalMs": {
			"name": "camel.kamelet.kafka-batch-azure-schema-registry-source.maxPollIntervalMs",
			"description": "The maximum delay between invocations of poll() when using consumer group management",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}