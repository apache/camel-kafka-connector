{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.pubnub.CamelPubnubSinkConnector",
		"artifactId": "camel-pubnub-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-pubnub-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send and receive messages to\/from PubNub data stream network for connected devices."
	},
	"properties": {
		"camel.sink.path.channel": {
			"name": "camel.sink.path.channel",
			"description": "The channel used for subscribing\/publishing events",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.uuid": {
			"name": "camel.sink.endpoint.uuid",
			"description": "UUID to be used as a device identifier, a default UUID is generated if not passed.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.operation": {
			"name": "camel.sink.endpoint.operation",
			"description": "The operation to perform. PUBLISH: Default. Send a message to all subscribers of a channel. FIRE: allows the client to send a message to BLOCKS Event Handlers. These messages will go directly to any Event Handlers registered on the channel. HERENOW: Obtain information about the current state of a channel including a list of unique user-ids currently subscribed to the channel and the total occupancy count. WHERENOW: Obtain information about the current list of channels to which a uuid is subscribed to. GETSTATE: Used to get key\/value pairs specific to a subscriber uuid. State information is supplied as a JSON object of key\/value pairs SETSTATE: Used to set key\/value pairs specific to a subscriber uuid GETHISTORY: Fetches historical messages of a channel. One of: [HERENOW] [WHERENOW] [GETSTATE] [SETSTATE] [GETHISTORY] [PUBLISH] [FIRE]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HERENOW",
				"WHERENOW",
				"GETSTATE",
				"SETSTATE",
				"GETHISTORY",
				"PUBLISH",
				"FIRE"
			]
		},
		"camel.sink.endpoint.pubnub": {
			"name": "camel.sink.endpoint.pubnub",
			"description": "Reference to a Pubnub client in the registry.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.authKey": {
			"name": "camel.sink.endpoint.authKey",
			"description": "If Access Manager is utilized, client will use this authKey in all restricted requests.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.cipherKey": {
			"name": "camel.sink.endpoint.cipherKey",
			"description": "If cipher is passed, all communications to\/from PubNub will be encrypted.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.publishKey": {
			"name": "camel.sink.endpoint.publishKey",
			"description": "The publish key obtained from your PubNub account. Required when publishing messages.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "The secret key used for message signing.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secure": {
			"name": "camel.sink.endpoint.secure",
			"description": "Use SSL for secure transmission.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.subscribeKey": {
			"name": "camel.sink.endpoint.subscribeKey",
			"description": "The subscribe key obtained from your PubNub account. Required when subscribing to channels or listening for presence events",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.pubnub.lazyStartProducer": {
			"name": "camel.component.pubnub.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.pubnub.autowiredEnabled": {
			"name": "camel.component.pubnub.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}