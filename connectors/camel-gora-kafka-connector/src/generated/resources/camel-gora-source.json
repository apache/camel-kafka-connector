{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.gora.CamelGoraSourceConnector",
		"artifactId": "camel-gora-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-gora-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Access NoSQL databases using the Apache Gora framework."
	},
	"properties": {
		"camel.source.path.name": {
			"name": "camel.source.path.name",
			"description": "Instance name",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.dataStoreClass": {
			"name": "camel.source.endpoint.dataStoreClass",
			"description": "The type of the dataStore",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.keyClass": {
			"name": "camel.source.endpoint.keyClass",
			"description": "The type class of the key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.valueClass": {
			"name": "camel.source.endpoint.valueClass",
			"description": "The type of the value",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.concurrentConsumers": {
			"name": "camel.source.endpoint.concurrentConsumers",
			"description": "Number of concurrent consumers",
			"defaultValue": "1",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.endKey": {
			"name": "camel.source.endpoint.endKey",
			"description": "The End Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.endTime": {
			"name": "camel.source.endpoint.endTime",
			"description": "The End Time",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.fields": {
			"name": "camel.source.endpoint.fields",
			"description": "The Fields",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.keyRangeFrom": {
			"name": "camel.source.endpoint.keyRangeFrom",
			"description": "The Key Range From",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.keyRangeTo": {
			"name": "camel.source.endpoint.keyRangeTo",
			"description": "The Key Range To",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.limit": {
			"name": "camel.source.endpoint.limit",
			"description": "The Limit",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.startKey": {
			"name": "camel.source.endpoint.startKey",
			"description": "The Start Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.startTime": {
			"name": "camel.source.endpoint.startTime",
			"description": "The Start Time",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.timeRangeFrom": {
			"name": "camel.source.endpoint.timeRangeFrom",
			"description": "The Time Range From",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.timeRangeTo": {
			"name": "camel.source.endpoint.timeRangeTo",
			"description": "The Time Range To",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.timestamp": {
			"name": "camel.source.endpoint.timestamp",
			"description": "The Timestamp",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.source.endpoint.hadoopConfiguration": {
			"name": "camel.source.endpoint.hadoopConfiguration",
			"description": "Hadoop Configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.gora.bridgeErrorHandler": {
			"name": "camel.component.gora.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.gora.autowiredEnabled": {
			"name": "camel.component.gora.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}