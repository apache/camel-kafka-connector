{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.controlbus.CamelControlbusSinkConnector",
		"artifactId": "camel-controlbus-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-controlbus-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Manage and monitor Camel routes."
	},
	"properties": {
		"camel.sink.path.command": {
			"name": "camel.sink.path.command",
			"description": "Command can be either route or language One of: [route] [language]",
			"priority": "HIGH",
			"required": "true",
			"enum": [
				"route",
				"language"
			]
		},
		"camel.sink.path.language": {
			"name": "camel.sink.path.language",
			"description": "Allows you to specify the name of a Language to use for evaluating the message body. If there is any result from the evaluation, then the result is put in the message body. One of: [bean] [constant] [el] [exchangeProperty] [file] [groovy] [header] [jsonpath] [mvel] [ognl] [ref] [simple] [spel] [sql] [terser] [tokenize] [xpath] [xquery] [xtokenize]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"bean",
				"constant",
				"el",
				"exchangeProperty",
				"file",
				"groovy",
				"header",
				"jsonpath",
				"mvel",
				"ognl",
				"ref",
				"simple",
				"spel",
				"sql",
				"terser",
				"tokenize",
				"xpath",
				"xquery",
				"xtokenize"
			]
		},
		"camel.sink.endpoint.action": {
			"name": "camel.sink.endpoint.action",
			"description": "To denote an action that can be either: start, stop, or status. To either start or stop a route, or to get the status of the route as output in the message body. You can use suspend and resume from Camel 2.11.1 onwards to either suspend or resume a route. And from Camel 2.11.1 onwards you can use stats to get performance statics returned in XML format; the routeId option can be used to define which route to get the performance stats for, if routeId is not defined, then you get statistics for the entire CamelContext. The restart action will restart the route. One of: [start] [stop] [suspend] [resume] [restart] [status] [stats]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"start",
				"stop",
				"suspend",
				"resume",
				"restart",
				"status",
				"stats"
			]
		},
		"camel.sink.endpoint.async": {
			"name": "camel.sink.endpoint.async",
			"description": "Whether to execute the control bus task asynchronously. Important: If this option is enabled, then any result from the task is not set on the Exchange. This is only possible if executing tasks synchronously.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.loggingLevel": {
			"name": "camel.sink.endpoint.loggingLevel",
			"description": "Logging level used for logging when task is done, or if any exceptions occurred during processing the task. One of: [TRACE] [DEBUG] [INFO] [WARN] [ERROR] [OFF]",
			"defaultValue": "\"INFO\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"TRACE",
				"DEBUG",
				"INFO",
				"WARN",
				"ERROR",
				"OFF"
			]
		},
		"camel.sink.endpoint.restartDelay": {
			"name": "camel.sink.endpoint.restartDelay",
			"description": "The delay in millis to use when restarting a route.",
			"defaultValue": "1000",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.routeId": {
			"name": "camel.sink.endpoint.routeId",
			"description": "To specify a route by its id. The special keyword current indicates the current route.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.controlbus.lazyStartProducer": {
			"name": "camel.component.controlbus.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.controlbus.autowiredEnabled": {
			"name": "camel.component.controlbus.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}