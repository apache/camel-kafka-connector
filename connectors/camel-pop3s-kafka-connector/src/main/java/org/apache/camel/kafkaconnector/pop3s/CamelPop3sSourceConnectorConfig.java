/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.kafkaconnector.pop3s;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSourceConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelPop3sSourceConnectorConfig
        extends
            CamelSourceConnectorConfig {

    public static final String CAMEL_SOURCE_POP3S_PATH_HOST_CONF = "camel.source.path.host";
    public static final String CAMEL_SOURCE_POP3S_PATH_HOST_DOC = "The mail server host name";
    public static final String CAMEL_SOURCE_POP3S_PATH_HOST_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_PATH_PORT_CONF = "camel.source.path.port";
    public static final String CAMEL_SOURCE_POP3S_PATH_PORT_DOC = "The port number of the mail server";
    public static final Integer CAMEL_SOURCE_POP3S_PATH_PORT_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_CONF = "camel.source.endpoint.bridgeErrorHandler";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_DOC = "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_CONF = "camel.source.endpoint.closeFolder";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_DOC = "Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_CONF = "camel.source.endpoint.copyTo";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_DOC = "After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_CONF = "camel.source.endpoint.delete";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_DOC = "Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_CONF = "camel.source.endpoint.disconnect";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_DOC = "Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_CONF = "camel.source.endpoint.handleFailedMessage";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_DOC = "If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_CONF = "camel.source.endpoint.maxMessagesPerPoll";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_DOC = "Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_CONF = "camel.source.endpoint.mimeDecodeHeaders";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_DOC = "This option enables transparent MIME decoding and unfolding for mail headers.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_CONF = "camel.source.endpoint.moveTo";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_DOC = "After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_CONF = "camel.source.endpoint.peek";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_DOC = "Will mark the javax.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_CONF = "camel.source.endpoint.sendEmptyMessageWhenIdle";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DOC = "If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_CONF = "camel.source.endpoint.skipFailedMessage";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_DOC = "If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_CONF = "camel.source.endpoint.unseen";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_DOC = "Whether to limit by unseen mails only.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_CONF = "camel.source.endpoint.exceptionHandler";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_DOC = "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_CONF = "camel.source.endpoint.exchangePattern";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_DOC = "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_CONF = "camel.source.endpoint.fetchSize";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_DOC = "Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_DEFAULT = -1;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_CONF = "camel.source.endpoint.folderName";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_DOC = "The folder to poll.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_DEFAULT = "INBOX";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_CONF = "camel.source.endpoint.mailUidGenerator";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_DOC = "A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_CONF = "camel.source.endpoint.mapMailMessage";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_DOC = "Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw javax.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(javax.mail.Message.class).";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_CONF = "camel.source.endpoint.pollStrategy";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_DOC = "A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_CONF = "camel.source.endpoint.postProcessAction";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_DOC = "Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_CONF = "camel.source.endpoint.additionalJavaMailProperties";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DOC = "Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_CONF = "camel.source.endpoint.alternativeBodyHeader";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_DOC = "Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_DEFAULT = "CamelMailAlternativeBody";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_CONF = "camel.source.endpoint.attachmentsContentTransferEncodingResolver";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DOC = "To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_CONF = "camel.source.endpoint.authenticator";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_DOC = "The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_CONF = "camel.source.endpoint.basicPropertyBinding";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_DOC = "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_CONF = "camel.source.endpoint.binding";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_DOC = "Sets the binding used to convert from a Camel message to and from a Mail message";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_CONF = "camel.source.endpoint.connectionTimeout";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_DOC = "The connection timeout in milliseconds.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_DEFAULT = 30000;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_CONF = "camel.source.endpoint.contentType";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_DOC = "The mail message content type. Use text/html for HTML mails.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_DEFAULT = "text/plain";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_CONF = "camel.source.endpoint.contentTypeResolver";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_DOC = "Resolver to determine Content-Type for file attachments.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_CONF = "camel.source.endpoint.debugMode";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_DOC = "Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_CONF = "camel.source.endpoint.headerFilterStrategy";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_DOC = "To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_CONF = "camel.source.endpoint.ignoreUnsupportedCharset";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_DOC = "Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_CONF = "camel.source.endpoint.ignoreUriScheme";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_DOC = "Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_CONF = "camel.source.endpoint.javaMailProperties";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_DOC = "Sets the java mail options. Will clear any default properties and only use the properties provided for this method.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_CONF = "camel.source.endpoint.session";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_DOC = "Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_CONF = "camel.source.endpoint.synchronous";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_DOC = "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_CONF = "camel.source.endpoint.useInlineAttachments";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_DOC = "Whether to use disposition inline or attachment.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_CONF = "camel.source.endpoint.idempotentRepository";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_DOC = "A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_CONF = "camel.source.endpoint.idempotentRepositoryRemoveOnCommit";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_DOC = "When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_CONF = "camel.source.endpoint.searchTerm";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_DOC = "Refers to a javax.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_CONF = "camel.source.endpoint.backoffErrorThreshold";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DOC = "The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_CONF = "camel.source.endpoint.backoffIdleThreshold";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DOC = "The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_CONF = "camel.source.endpoint.backoffMultiplier";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_DOC = "To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.";
    public static final Integer CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_CONF = "camel.source.endpoint.delay";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_DOC = "Milliseconds before the next poll.";
    public static final Long CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_DEFAULT = 60000L;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_CONF = "camel.source.endpoint.greedy";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_DOC = "If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_CONF = "camel.source.endpoint.initialDelay";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_DOC = "Milliseconds before the first poll starts.";
    public static final Long CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_DEFAULT = 1000L;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_CONF = "camel.source.endpoint.repeatCount";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_DOC = "Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.";
    public static final Long CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_DEFAULT = 0L;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_CONF = "camel.source.endpoint.runLoggingLevel";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_DOC = "The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that. One of: [TRACE] [DEBUG] [INFO] [WARN] [ERROR] [OFF]";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_DEFAULT = "TRACE";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_CONF = "camel.source.endpoint.scheduledExecutorService";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DOC = "Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_CONF = "camel.source.endpoint.scheduler";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_DOC = "To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_DEFAULT = "none";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_CONF = "camel.source.endpoint.schedulerProperties";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_DOC = "To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_CONF = "camel.source.endpoint.startScheduler";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_DOC = "Whether the scheduler should be auto started.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_CONF = "camel.source.endpoint.timeUnit";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_DOC = "Time unit for initialDelay and delay options. One of: [NANOSECONDS] [MICROSECONDS] [MILLISECONDS] [SECONDS] [MINUTES] [HOURS] [DAYS]";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_DEFAULT = "MILLISECONDS";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_CONF = "camel.source.endpoint.useFixedDelay";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_DOC = "Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.";
    public static final Boolean CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_CONF = "camel.source.endpoint.password";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_DOC = "The password for login. See also setAuthenticator(MailAuthenticator).";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_CONF = "camel.source.endpoint.sslContextParameters";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_DOC = "To configure security using SSLContextParameters.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_CONF = "camel.source.endpoint.username";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_DOC = "The username for login. See also setAuthenticator(MailAuthenticator).";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_CONF = "camel.source.endpoint.sortTerm";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_DOC = "Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.";
    public static final String CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_CONF = "camel.component.pop3s.bridgeErrorHandler";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_DOC = "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_CONF = "camel.component.pop3s.closeFolder";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_DOC = "Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_CONF = "camel.component.pop3s.copyTo";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_DOC = "After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DELETE_CONF = "camel.component.pop3s.delete";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DELETE_DOC = "Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_DELETE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_CONF = "camel.component.pop3s.disconnect";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_DOC = "Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_CONF = "camel.component.pop3s.handleFailedMessage";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_DOC = "If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_CONF = "camel.component.pop3s.mimeDecodeHeaders";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_DOC = "This option enables transparent MIME decoding and unfolding for mail headers.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_CONF = "camel.component.pop3s.moveTo";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_DOC = "After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_PEEK_CONF = "camel.component.pop3s.peek";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_PEEK_DOC = "Will mark the javax.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_PEEK_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_CONF = "camel.component.pop3s.skipFailedMessage";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_DOC = "If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_CONF = "camel.component.pop3s.unseen";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_DOC = "Whether to limit by unseen mails only.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_CONF = "camel.component.pop3s.fetchSize";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_DOC = "Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.";
    public static final Integer CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_DEFAULT = -1;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_CONF = "camel.component.pop3s.folderName";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_DOC = "The folder to poll.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_DEFAULT = "INBOX";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_CONF = "camel.component.pop3s.mapMailMessage";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_DOC = "Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw javax.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(javax.mail.Message.class).";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_DEFAULT = true;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_CONF = "camel.component.pop3s.additionalJavaMailProperties";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DOC = "Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_CONF = "camel.component.pop3s.alternativeBodyHeader";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_DOC = "Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_DEFAULT = "CamelMailAlternativeBody";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_CONF = "camel.component.pop3s.attachmentsContentTransferEncodingResolver";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DOC = "To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_CONF = "camel.component.pop3s.authenticator";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_DOC = "The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_CONF = "camel.component.pop3s.basicPropertyBinding";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_DOC = "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_CONF = "camel.component.pop3s.configuration";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_DOC = "Sets the Mail configuration";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_CONF = "camel.component.pop3s.connectionTimeout";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_DOC = "The connection timeout in milliseconds.";
    public static final Integer CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_DEFAULT = 30000;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_CONF = "camel.component.pop3s.contentType";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_DOC = "The mail message content type. Use text/html for HTML mails.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_DEFAULT = "text/plain";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_CONF = "camel.component.pop3s.contentTypeResolver";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_DOC = "Resolver to determine Content-Type for file attachments.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_CONF = "camel.component.pop3s.debugMode";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_DOC = "Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_CONF = "camel.component.pop3s.ignoreUnsupportedCharset";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_DOC = "Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_CONF = "camel.component.pop3s.ignoreUriScheme";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_DOC = "Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_CONF = "camel.component.pop3s.javaMailProperties";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_DOC = "Sets the java mail options. Will clear any default properties and only use the properties provided for this method.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SESSION_CONF = "camel.component.pop3s.session";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SESSION_DOC = "Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SESSION_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_CONF = "camel.component.pop3s.useInlineAttachments";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_DOC = "Whether to use disposition inline or attachment.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_CONF = "camel.component.pop3s.headerFilterStrategy";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_DOC = "To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_CONF = "camel.component.pop3s.password";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_DOC = "The password for login. See also setAuthenticator(MailAuthenticator).";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_CONF = "camel.component.pop3s.sslContextParameters";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_DOC = "To configure security using SSLContextParameters.";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_DEFAULT = null;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_CONF = "camel.component.pop3s.useGlobalSslContextParameters";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_DOC = "Enable usage of global SSL context parameters.";
    public static final Boolean CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_DEFAULT = false;
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_CONF = "camel.component.pop3s.username";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_DOC = "The username for login. See also setAuthenticator(MailAuthenticator).";
    public static final String CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_DEFAULT = null;

    public CamelPop3sSourceConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelPop3sSourceConnectorConfig(Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSourceConnectorConfig.conf());
        conf.define(CAMEL_SOURCE_POP3S_PATH_HOST_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_PATH_HOST_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_POP3S_PATH_HOST_DOC);
        conf.define(CAMEL_SOURCE_POP3S_PATH_PORT_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_PATH_PORT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_PATH_PORT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BRIDGE_ERROR_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_CLOSE_FOLDER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_COPY_TO_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_DELETE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_DISCONNECT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_HANDLE_FAILED_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_MAX_MESSAGES_PER_POLL_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_MIME_DECODE_HEADERS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_MOVE_TO_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_PEEK_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SKIP_FAILED_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_UNSEEN_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_EXCEPTION_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_EXCHANGE_PATTERN_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_FETCH_SIZE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_FOLDER_NAME_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_MAIL_UID_GENERATOR_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_MAP_MAIL_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_POLL_STRATEGY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_POST_PROCESS_ACTION_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_ALTERNATIVE_BODY_HEADER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_AUTHENTICATOR_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BASIC_PROPERTY_BINDING_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BINDING_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_CONNECTION_TIMEOUT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_CONTENT_TYPE_RESOLVER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_DEBUG_MODE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_HEADER_FILTER_STRATEGY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_UNSUPPORTED_CHARSET_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_IGNORE_URI_SCHEME_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_JAVA_MAIL_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SESSION_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SYNCHRONOUS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_USE_INLINE_ATTACHMENTS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_IDEMPOTENT_REPOSITORY_REMOVE_ON_COMMIT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SEARCH_TERM_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_BACKOFF_MULTIPLIER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_DELAY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_GREEDY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_INITIAL_DELAY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_REPEAT_COUNT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_RUN_LOGGING_LEVEL_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SCHEDULER_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_START_SCHEDULER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_TIME_UNIT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_USE_FIXED_DELAY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_PASSWORD_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SSL_CONTEXT_PARAMETERS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_USERNAME_DOC);
        conf.define(CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_ENDPOINT_SORT_TERM_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_BRIDGE_ERROR_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_CLOSE_FOLDER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_COPY_TO_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_DELETE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_DELETE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_DELETE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_DISCONNECT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_HANDLE_FAILED_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_MIME_DECODE_HEADERS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_MOVE_TO_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_PEEK_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_PEEK_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_PEEK_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_SKIP_FAILED_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_UNSEEN_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_FETCH_SIZE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_FOLDER_NAME_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_MAP_MAIL_MESSAGE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_ADDITIONAL_JAVA_MAIL_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_ALTERNATIVE_BODY_HEADER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_ATTACHMENTS_CONTENT_TRANSFER_ENCODING_RESOLVER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_AUTHENTICATOR_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_DEFAULT, ConfigDef.Importance.LOW, CAMEL_SOURCE_POP3S_COMPONENT_BASIC_PROPERTY_BINDING_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_CONFIGURATION_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_CONNECTION_TIMEOUT_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_CONTENT_TYPE_RESOLVER_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_DEBUG_MODE_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_UNSUPPORTED_CHARSET_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_IGNORE_URI_SCHEME_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_JAVA_MAIL_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_SESSION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_SESSION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_SESSION_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_USE_INLINE_ATTACHMENTS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_HEADER_FILTER_STRATEGY_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_PASSWORD_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_SSL_CONTEXT_PARAMETERS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_USE_GLOBAL_SSL_CONTEXT_PARAMETERS_DOC);
        conf.define(CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_POP3S_COMPONENT_USERNAME_DOC);
        return conf;
    }
}