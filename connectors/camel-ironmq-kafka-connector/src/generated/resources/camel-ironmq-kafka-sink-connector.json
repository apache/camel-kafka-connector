{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.ironmq.CamelIronmqSinkConnector",
		"artifactId": "camel-ironmq",
		"groupId": "org.apache.camel",
		"title": "camel-ironmq",
		"version": "0.6.0-SNAPSHOT"
	},
	"properties": {
		"camel.sink.path.queueName": {
			"name": "camel.sink.path.queueName",
			"description": "The name of the IronMQ queue",
			"defaultValue": "null",
			"priority": "HIGH"
		},
		"camel.sink.endpoint.client": {
			"name": "camel.sink.endpoint.client",
			"description": "Reference to a io.iron.ironmq.Client in the Registry.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.ironMQCloud": {
			"name": "camel.sink.endpoint.ironMQCloud",
			"description": "IronMq Cloud url. Urls for public clusters: https:\/\/mq-aws-us-east-1-1.iron.io (US) and https:\/\/mq-aws-eu-west-1-1.iron.io (EU)",
			"defaultValue": "\"https:\/\/mq-aws-us-east-1-1.iron.io\"",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.preserveHeaders": {
			"name": "camel.sink.endpoint.preserveHeaders",
			"description": "Should message headers be preserved when publishing messages. This will add the Camel headers to the Iron MQ message as a json payload with a header list, and a message body. Useful when Camel is both consumer and producer.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.projectId": {
			"name": "camel.sink.endpoint.projectId",
			"description": "IronMQ projectId",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.token": {
			"name": "camel.sink.endpoint.token",
			"description": "IronMQ token",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.visibilityDelay": {
			"name": "camel.sink.endpoint.visibilityDelay",
			"description": "The item will not be available on the queue until this many seconds have passed. Default is 0 seconds.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.ironmq.lazyStartProducer": {
			"name": "camel.component.ironmq.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.ironmq.basicPropertyBinding": {
			"name": "camel.component.ironmq.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		}
	}
}
