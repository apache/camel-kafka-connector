{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.googlepubsub.CamelGooglepubsubSourceConnector",
		"artifactId": "camel-google-pubsub",
		"groupId": "org.apache.camel",
		"title": "camel-google-pubsub",
		"version": "0.6.0-SNAPSHOT"
	},
	"properties": {
		"camel.source.path.projectId": {
			"name": "camel.source.path.projectId",
			"description": "Project Id",
			"defaultValue": "null",
			"priority": "HIGH"
		},
		"camel.source.path.destinationName": {
			"name": "camel.source.path.destinationName",
			"description": "Destination Name",
			"defaultValue": "null",
			"priority": "HIGH"
		},
		"camel.source.endpoint.ackMode": {
			"name": "camel.source.endpoint.ackMode",
			"description": "AUTO = exchange gets ack'ed\/nack'ed on completion. NONE = downstream process has to ack\/nack explicitly One of: [AUTO] [NONE]",
			"defaultValue": "\"AUTO\"",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.concurrentConsumers": {
			"name": "camel.source.endpoint.concurrentConsumers",
			"description": "The number of parallel streams consuming from the subscription",
			"defaultValue": "\"1\"",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.loggerId": {
			"name": "camel.source.endpoint.loggerId",
			"description": "Logger ID to use when a match to the parent route required",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.maxMessagesPerPoll": {
			"name": "camel.source.endpoint.maxMessagesPerPoll",
			"description": "The max number of messages to receive from the server in a single API call",
			"defaultValue": "\"1\"",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.synchronousPull": {
			"name": "camel.source.endpoint.synchronousPull",
			"description": "Synchronously pull batches of messages",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.basicPropertyBinding": {
			"name": "camel.source.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.source.endpoint.synchronous": {
			"name": "camel.source.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.google-pubsub.endpoint": {
			"name": "camel.component.google-pubsub.endpoint",
			"description": "Endpoint to use with local Pub\/Sub emulator.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.component.google-pubsub.bridgeErrorHandler": {
			"name": "camel.component.google-pubsub.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.google-pubsub.basicPropertyBinding": {
			"name": "camel.component.google-pubsub.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.google-pubsub.publisherTerminationTimeout": {
			"name": "camel.component.google-pubsub.publisherTerminationTimeout",
			"description": "How many milliseconds should a producer be allowed to terminate.",
			"defaultValue": "null",
			"priority": "MEDIUM"
		}
	}
}
