{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.googlepubsub.CamelGooglepubsubSourceConnector",
		"artifactId": "camel-google-pubsub-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-google-pubsub-source",
		"type": "source",
		"version": "0.10.0-SNAPSHOT",
		"description": "Send and receive messages to\/from Google Cloud Platform PubSub Service."
	},
	"properties": {
		"camel.source.path.projectId": {
			"name": "camel.source.path.projectId",
			"description": "The Google Cloud PubSub Project Id",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.path.destinationName": {
			"name": "camel.source.path.destinationName",
			"description": "The Destination Name. For the consumer this will be the subscription name, while for the producer this will be the topic name.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.ackMode": {
			"name": "camel.source.endpoint.ackMode",
			"description": "AUTO = exchange gets ack'ed\/nack'ed on completion. NONE = downstream process has to ack\/nack explicitly One of: [AUTO] [NONE]",
			"defaultValue": "\"AUTO\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"AUTO",
				"NONE"
			]
		},
		"camel.source.endpoint.concurrentConsumers": {
			"name": "camel.source.endpoint.concurrentConsumers",
			"description": "The number of parallel streams consuming from the subscription",
			"defaultValue": "\"1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.loggerId": {
			"name": "camel.source.endpoint.loggerId",
			"description": "Logger ID to use when a match to the parent route required",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.maxMessagesPerPoll": {
			"name": "camel.source.endpoint.maxMessagesPerPoll",
			"description": "The max number of messages to receive from the server in a single API call",
			"defaultValue": "\"1\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.serviceAccountKey": {
			"name": "camel.source.endpoint.serviceAccountKey",
			"description": "The Service account key that can be used as credentials for the PubSub publisher\/subscriber. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.source.endpoint.synchronousPull": {
			"name": "camel.source.endpoint.synchronousPull",
			"description": "Synchronously pull batches of messages",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.bridgeErrorHandler": {
			"name": "camel.source.endpoint.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exceptionHandler": {
			"name": "camel.source.endpoint.exceptionHandler",
			"description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.source.endpoint.exchangePattern": {
			"name": "camel.source.endpoint.exchangePattern",
			"description": "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"InOnly",
				"InOut",
				"InOptionalOut"
			]
		},
		"camel.component.google-pubsub.endpoint": {
			"name": "camel.component.google-pubsub.endpoint",
			"description": "Endpoint to use with local Pub\/Sub emulator.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-pubsub.serviceAccountKey": {
			"name": "camel.component.google-pubsub.serviceAccountKey",
			"description": "The Service account key that can be used as credentials for the PubSub publisher\/subscriber. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.component.google-pubsub.bridgeErrorHandler": {
			"name": "camel.component.google-pubsub.bridgeErrorHandler",
			"description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-pubsub.autowiredEnabled": {
			"name": "camel.component.google-pubsub.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.google-pubsub.publisherTerminationTimeout": {
			"name": "camel.component.google-pubsub.publisherTerminationTimeout",
			"description": "How many milliseconds should a producer be allowed to terminate.",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}