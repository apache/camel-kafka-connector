{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.aws2cw.CamelAws2cwSinkConnector",
		"artifactId": "camel-aws2-cw-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws2-cw-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Sending metrics to AWS CloudWatch using AWS SDK version 2.x."
	},
	"properties": {
		"camel.sink.path.namespace": {
			"name": "camel.sink.path.namespace",
			"description": "The metric namespace",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.amazonCwClient": {
			"name": "camel.sink.endpoint.amazonCwClient",
			"description": "To use the AmazonCloudWatch as the client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.name": {
			"name": "camel.sink.endpoint.name",
			"description": "The metric name",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.overrideEndpoint": {
			"name": "camel.sink.endpoint.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyHost": {
			"name": "camel.sink.endpoint.proxyHost",
			"description": "To define a proxy host when instantiating the CW client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyPort": {
			"name": "camel.sink.endpoint.proxyPort",
			"description": "To define a proxy port when instantiating the CW client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.proxyProtocol": {
			"name": "camel.sink.endpoint.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the CW client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.sink.endpoint.region": {
			"name": "camel.sink.endpoint.region",
			"description": "The region in which EKS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.timestamp": {
			"name": "camel.sink.endpoint.timestamp",
			"description": "The metric timestamp",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.trustAllCertificates": {
			"name": "camel.sink.endpoint.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.unit": {
			"name": "camel.sink.endpoint.unit",
			"description": "The metric unit",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.uriEndpointOverride": {
			"name": "camel.sink.endpoint.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.useDefaultCredentialsProvider": {
			"name": "camel.sink.endpoint.useDefaultCredentialsProvider",
			"description": "Set whether the S3 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.value": {
			"name": "camel.sink.endpoint.value",
			"description": "The metric value",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.accessKey": {
			"name": "camel.sink.endpoint.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.secretKey": {
			"name": "camel.sink.endpoint.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.amazonCwClient": {
			"name": "camel.component.aws2-cw.amazonCwClient",
			"description": "To use the AmazonCloudWatch as the client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.configuration": {
			"name": "camel.component.aws2-cw.configuration",
			"description": "The component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.lazyStartProducer": {
			"name": "camel.component.aws2-cw.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.name": {
			"name": "camel.component.aws2-cw.name",
			"description": "The metric name",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.overrideEndpoint": {
			"name": "camel.component.aws2-cw.overrideEndpoint",
			"description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.proxyHost": {
			"name": "camel.component.aws2-cw.proxyHost",
			"description": "To define a proxy host when instantiating the CW client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.proxyPort": {
			"name": "camel.component.aws2-cw.proxyPort",
			"description": "To define a proxy port when instantiating the CW client",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.proxyProtocol": {
			"name": "camel.component.aws2-cw.proxyProtocol",
			"description": "To define a proxy protocol when instantiating the CW client One of: [HTTP] [HTTPS]",
			"defaultValue": "\"HTTPS\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"HTTP",
				"HTTPS"
			]
		},
		"camel.component.aws2-cw.region": {
			"name": "camel.component.aws2-cw.region",
			"description": "The region in which EKS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.timestamp": {
			"name": "camel.component.aws2-cw.timestamp",
			"description": "The metric timestamp",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.trustAllCertificates": {
			"name": "camel.component.aws2-cw.trustAllCertificates",
			"description": "If we want to trust all certificates in case of overriding the endpoint",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.unit": {
			"name": "camel.component.aws2-cw.unit",
			"description": "The metric unit",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.uriEndpointOverride": {
			"name": "camel.component.aws2-cw.uriEndpointOverride",
			"description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.useDefaultCredentialsProvider": {
			"name": "camel.component.aws2-cw.useDefaultCredentialsProvider",
			"description": "Set whether the S3 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.value": {
			"name": "camel.component.aws2-cw.value",
			"description": "The metric value",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.autowiredEnabled": {
			"name": "camel.component.aws2-cw.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.accessKey": {
			"name": "camel.component.aws2-cw.accessKey",
			"description": "Amazon AWS Access Key",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.aws2-cw.secretKey": {
			"name": "camel.component.aws2-cw.secretKey",
			"description": "Amazon AWS Secret Key",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}