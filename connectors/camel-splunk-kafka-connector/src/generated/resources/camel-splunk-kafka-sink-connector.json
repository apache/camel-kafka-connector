{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.splunk.CamelSplunkSinkConnector",
		"artifactId": "camel-splunk",
		"groupId": "org.apache.camel",
		"title": "camel-splunk",
		"version": "0.6.0-SNAPSHOT"
	},
	"properties": {
		"camel.sink.path.name": {
			"name": "camel.sink.path.name",
			"description": "Name has no purpose",
			"defaultValue": "null",
			"priority": "HIGH"
		},
		"camel.sink.endpoint.app": {
			"name": "camel.sink.endpoint.app",
			"description": "Splunk app",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.connectionTimeout": {
			"name": "camel.sink.endpoint.connectionTimeout",
			"description": "Timeout in MS when connecting to Splunk server",
			"defaultValue": "5000",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.host": {
			"name": "camel.sink.endpoint.host",
			"description": "Splunk host.",
			"defaultValue": "\"localhost\"",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.owner": {
			"name": "camel.sink.endpoint.owner",
			"description": "Splunk owner",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.port": {
			"name": "camel.sink.endpoint.port",
			"description": "Splunk port",
			"defaultValue": "8089",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.scheme": {
			"name": "camel.sink.endpoint.scheme",
			"description": "Splunk scheme",
			"defaultValue": "\"https\"",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.eventHost": {
			"name": "camel.sink.endpoint.eventHost",
			"description": "Override the default Splunk event host field",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.index": {
			"name": "camel.sink.endpoint.index",
			"description": "Splunk index to write to",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.raw": {
			"name": "camel.sink.endpoint.raw",
			"description": "Should the payload be inserted raw",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.source": {
			"name": "camel.sink.endpoint.source",
			"description": "Splunk source argument",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.sourceType": {
			"name": "camel.sink.endpoint.sourceType",
			"description": "Splunk sourcetype argument",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.tcpReceiverPort": {
			"name": "camel.sink.endpoint.tcpReceiverPort",
			"description": "Splunk tcp receiver port",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.basicPropertyBinding": {
			"name": "camel.sink.endpoint.basicPropertyBinding",
			"description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.synchronous": {
			"name": "camel.sink.endpoint.synchronous",
			"description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.password": {
			"name": "camel.sink.endpoint.password",
			"description": "Password for Splunk",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.sslProtocol": {
			"name": "camel.sink.endpoint.sslProtocol",
			"description": "Set the ssl protocol to use One of: [TLSv1.2] [TLSv1.1] [TLSv1] [SSLv3]",
			"defaultValue": "\"TLSv1.2\"",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.username": {
			"name": "camel.sink.endpoint.username",
			"description": "Username for Splunk",
			"defaultValue": "null",
			"priority": "MEDIUM"
		},
		"camel.sink.endpoint.useSunHttpsHandler": {
			"name": "camel.sink.endpoint.useSunHttpsHandler",
			"description": "Use sun.net.www.protocol.https.Handler Https handler to establish the Splunk Connection. Can be useful when running in application servers to avoid app. server https handling.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.splunk.lazyStartProducer": {
			"name": "camel.component.splunk.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.splunk.basicPropertyBinding": {
			"name": "camel.component.splunk.basicPropertyBinding",
			"description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities",
			"defaultValue": "false",
			"priority": "MEDIUM"
		},
		"camel.component.splunk.splunkConfigurationFactory": {
			"name": "camel.component.splunk.splunkConfigurationFactory",
			"description": "To use the SplunkConfigurationFactory",
			"defaultValue": "null",
			"priority": "MEDIUM"
		}
	}
}
