/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.kafkaconnector.azurestorageblob;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSinkConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelAzurestorageblobSinkConnectorConfig
        extends
            CamelSinkConnectorConfig {

    public static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_CONF = "camel.sink.path.accountName";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_DOC = "Azure account name to be used for authentication with azure blob services";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_CONF = "camel.sink.path.containerName";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_DOC = "The blob container name";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_CONF = "camel.sink.endpoint.blobName";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_DOC = "The blob name, required for consumer. However on producer, is only required for the operations on the blob level";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_CONF = "camel.sink.endpoint.blobOffset";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_DOC = "Set the blob offset for the upload or download operations, default is 0";
    private static final Long CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_DEFAULT = 0L;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_CONF = "camel.sink.endpoint.blobServiceClient";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_DOC = "Client to a storage account. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers. This client contains operations on a service account. Operations on a container are available on BlobContainerClient through getBlobContainerClient(String), and operations on a blob are available on BlobClient through getBlobContainerClient(String).getBlobClient(String).";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_CONF = "camel.sink.endpoint.blobType";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_DOC = "The blob type in order to initiate the appropriate settings for each blob type One of: [blockblob] [appendblob] [pageblob]";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_DEFAULT = "blockblob";
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_CONF = "camel.sink.endpoint.closeStreamAfterRead";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_DOC = "Close the stream after read or keep it open, default is true";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_DEFAULT = true;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_CONF = "camel.sink.endpoint.credentials";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_DOC = "StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_CONF = "camel.sink.endpoint.dataCount";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_DOC = "How many bytes to include in the range. Must be greater than or equal to 0 if specified.";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_CONF = "camel.sink.endpoint.fileDir";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_DOC = "The file directory where the downloaded blobs will be saved to, this can be used in both, producer and consumer";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_CONF = "camel.sink.endpoint.maxRetryRequests";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_DOC = "Specifies the maximum number of additional HTTP Get requests that will be made while reading the data from a response body.";
    private static final Integer CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_DEFAULT = 0;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_CONF = "camel.sink.endpoint.serviceClient";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_DOC = "Client to a storage account. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers. This client contains operations on a service account. Operations on a container are available on BlobContainerClient through getBlobContainerClient(String), and operations on a blob are available on BlobClient through getBlobContainerClient(String).getBlobClient(String).";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_CONF = "camel.sink.endpoint.closeStreamAfterWrite";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_DOC = "Close the stream after write or keep it open, default is true";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_DEFAULT = true;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_CONF = "camel.sink.endpoint.lazyStartProducer";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_DOC = "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_DEFAULT = false;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_CONF = "camel.sink.endpoint.operation";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_DOC = "The blob operation that can be used with this component on the producer One of: [listBlobContainers] [createBlobContainer] [deleteBlobContainer] [listBlobs] [getBlob] [deleteBlob] [downloadBlobToFile] [downloadLink] [uploadBlockBlob] [stageBlockBlobList] [commitBlobBlockList] [getBlobBlockList] [createAppendBlob] [commitAppendBlob] [createPageBlob] [uploadPageBlob] [resizePageBlob] [clearPageBlob] [getPageBlobRanges]";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_DEFAULT = "listBlobContainers";
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_CONF = "camel.sink.endpoint.basicPropertyBinding";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_DOC = "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_DEFAULT = false;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_CONF = "camel.sink.endpoint.synchronous";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_DOC = "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported).";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_DEFAULT = false;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_CONF = "camel.sink.endpoint.accessKey";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_DOC = "Access key for the associated azure account name to be used for authentication with azure blob services";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_CONF = "camel.component.azure-storage-blob.blobName";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_DOC = "The blob name, required for consumer. However on producer, is only required for the operations on the blob level";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_CONF = "camel.component.azure-storage-blob.blobOffset";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_DOC = "Set the blob offset for the upload or download operations, default is 0";
    private static final Long CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_DEFAULT = 0L;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_CONF = "camel.component.azure-storage-blob.blobType";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_DOC = "The blob type in order to initiate the appropriate settings for each blob type One of: [blockblob] [appendblob] [pageblob]";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_DEFAULT = "blockblob";
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_CONF = "camel.component.azure-storage-blob.closeStreamAfterRead";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_DOC = "Close the stream after read or keep it open, default is true";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_DEFAULT = true;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_CONF = "camel.component.azure-storage-blob.configuration";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_DOC = "The component configurations";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_CONF = "camel.component.azure-storage-blob.credentials";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_DOC = "StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_CONF = "camel.component.azure-storage-blob.dataCount";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_DOC = "How many bytes to include in the range. Must be greater than or equal to 0 if specified.";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_CONF = "camel.component.azure-storage-blob.fileDir";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_DOC = "The file directory where the downloaded blobs will be saved to, this can be used in both, producer and consumer";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_CONF = "camel.component.azure-storage-blob.maxRetryRequests";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_DOC = "Specifies the maximum number of additional HTTP Get requests that will be made while reading the data from a response body.";
    private static final Integer CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_DEFAULT = 0;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_CONF = "camel.component.azure-storage-blob.serviceClient";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_DOC = "Client to a storage account. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers. This client contains operations on a service account. Operations on a container are available on BlobContainerClient through getBlobContainerClient(String), and operations on a blob are available on BlobClient through getBlobContainerClient(String).getBlobClient(String).";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_DEFAULT = null;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_CONF = "camel.component.azure-storage-blob.closeStreamAfterWrite";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_DOC = "Close the stream after write or keep it open, default is true";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_DEFAULT = true;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_CONF = "camel.component.azure-storage-blob.lazyStartProducer";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_DOC = "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_DEFAULT = false;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_CONF = "camel.component.azure-storage-blob.operation";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_DOC = "The blob operation that can be used with this component on the producer One of: [listBlobContainers] [createBlobContainer] [deleteBlobContainer] [listBlobs] [getBlob] [deleteBlob] [downloadBlobToFile] [downloadLink] [uploadBlockBlob] [stageBlockBlobList] [commitBlobBlockList] [getBlobBlockList] [createAppendBlob] [commitAppendBlob] [createPageBlob] [uploadPageBlob] [resizePageBlob] [clearPageBlob] [getPageBlobRanges]";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_DEFAULT = "listBlobContainers";
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_CONF = "camel.component.azure-storage-blob.basicPropertyBinding";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_DOC = "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities";
    private static final Boolean CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_DEFAULT = false;
    public static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_CONF = "camel.component.azure-storage-blob.accessKey";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_DOC = "Access key for the associated azure account name to be used for authentication with azure blob services";
    private static final String CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_DEFAULT = null;

    public CamelAzurestorageblobSinkConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelAzurestorageblobSinkConnectorConfig(
            Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSinkConnectorConfig.conf());
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_PATH_ACCOUNT_NAME_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_PATH_CONTAINER_NAME_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_NAME_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_CONF, ConfigDef.Type.LONG, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_OFFSET_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_SERVICE_CLIENT_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BLOB_TYPE_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_READ_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CREDENTIALS_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_DATA_COUNT_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_FILE_DIR_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_CONF, ConfigDef.Type.INT, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_MAX_RETRY_REQUESTS_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SERVICE_CLIENT_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_CLOSE_STREAM_AFTER_WRITE_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_LAZY_START_PRODUCER_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_OPERATION_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_BASIC_PROPERTY_BINDING_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_SYNCHRONOUS_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_ENDPOINT_ACCESS_KEY_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_NAME_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_CONF, ConfigDef.Type.LONG, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_OFFSET_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BLOB_TYPE_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_READ_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CONFIGURATION_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CREDENTIALS_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_DATA_COUNT_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_FILE_DIR_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_CONF, ConfigDef.Type.INT, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_MAX_RETRY_REQUESTS_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_SERVICE_CLIENT_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_CLOSE_STREAM_AFTER_WRITE_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_LAZY_START_PRODUCER_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_OPERATION_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_BASIC_PROPERTY_BINDING_DOC);
        conf.define(CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_CONF, ConfigDef.Type.STRING, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SINK_AZURESTORAGEBLOB_COMPONENT_ACCESS_KEY_DOC);
        return conf;
    }
}