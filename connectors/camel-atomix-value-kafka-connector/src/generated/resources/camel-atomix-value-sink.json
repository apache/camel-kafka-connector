{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.atomixvalue.CamelAtomixvalueSinkConnector",
		"artifactId": "camel-atomix-value-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-atomix-value-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "Access Atomix's distributed value."
	},
	"properties": {
		"camel.sink.path.resourceName": {
			"name": "camel.sink.path.resourceName",
			"description": "The distributed resource name",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.sink.endpoint.atomix": {
			"name": "camel.sink.endpoint.atomix",
			"description": "The Atomix instance to use",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.configurationUri": {
			"name": "camel.sink.endpoint.configurationUri",
			"description": "The Atomix configuration uri.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.defaultAction": {
			"name": "camel.sink.endpoint.defaultAction",
			"description": "The default action. One of: [SET] [GET] [GET_AND_SET] [COMPARE_AND_SET]",
			"defaultValue": "\"SET\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SET",
				"GET",
				"GET_AND_SET",
				"COMPARE_AND_SET"
			]
		},
		"camel.sink.endpoint.nodes": {
			"name": "camel.sink.endpoint.nodes",
			"description": "The address of the nodes composing the cluster.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.resultHeader": {
			"name": "camel.sink.endpoint.resultHeader",
			"description": "The header that wil carry the result.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.transportClassName": {
			"name": "camel.sink.endpoint.transportClassName",
			"description": "The class name (fqn) of the Atomix transport",
			"defaultValue": "\"io.atomix.catalyst.transport.netty.NettyTransport\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ttl": {
			"name": "camel.sink.endpoint.ttl",
			"description": "The resource ttl.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.defaultResourceConfig": {
			"name": "camel.sink.endpoint.defaultResourceConfig",
			"description": "The cluster wide default resource configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.defaultResourceOptions": {
			"name": "camel.sink.endpoint.defaultResourceOptions",
			"description": "The local default resource options.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.ephemeral": {
			"name": "camel.sink.endpoint.ephemeral",
			"description": "Sets if the local member should join groups as PersistentMember or not. If set to ephemeral the local member will receive an auto generated ID thus the local one is ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.readConsistency": {
			"name": "camel.sink.endpoint.readConsistency",
			"description": "The read consistency level. One of: [ATOMIC] [ATOMIC_LEASE] [SEQUENTIAL] [LOCAL]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"ATOMIC",
				"ATOMIC_LEASE",
				"SEQUENTIAL",
				"LOCAL"
			]
		},
		"camel.sink.endpoint.resourceConfigs": {
			"name": "camel.sink.endpoint.resourceConfigs",
			"description": "Cluster wide resources configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.resourceOptions": {
			"name": "camel.sink.endpoint.resourceOptions",
			"description": "Local resources configurations",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.atomix": {
			"name": "camel.component.atomix-value.atomix",
			"description": "The Atomix instance to use",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.configuration": {
			"name": "camel.component.atomix-value.configuration",
			"description": "The shared component configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.configurationUri": {
			"name": "camel.component.atomix-value.configurationUri",
			"description": "The path to the AtomixClient configuration",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.defaultAction": {
			"name": "camel.component.atomix-value.defaultAction",
			"description": "The default action. One of: [SET] [GET] [GET_AND_SET] [COMPARE_AND_SET]",
			"defaultValue": "\"SET\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"SET",
				"GET",
				"GET_AND_SET",
				"COMPARE_AND_SET"
			]
		},
		"camel.component.atomix-value.nodes": {
			"name": "camel.component.atomix-value.nodes",
			"description": "The nodes the AtomixClient should connect to",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.resultHeader": {
			"name": "camel.component.atomix-value.resultHeader",
			"description": "The header that wil carry the result.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.transportClassName": {
			"name": "camel.component.atomix-value.transportClassName",
			"description": "The class name (fqn) of the Atomix transport",
			"defaultValue": "\"io.atomix.catalyst.transport.netty.NettyTransport\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.ttl": {
			"name": "camel.component.atomix-value.ttl",
			"description": "The resource ttl.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.lazyStartProducer": {
			"name": "camel.component.atomix-value.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.autowiredEnabled": {
			"name": "camel.component.atomix-value.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.defaultResourceConfig": {
			"name": "camel.component.atomix-value.defaultResourceConfig",
			"description": "The cluster wide default resource configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.defaultResourceOptions": {
			"name": "camel.component.atomix-value.defaultResourceOptions",
			"description": "The local default resource options.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.ephemeral": {
			"name": "camel.component.atomix-value.ephemeral",
			"description": "Sets if the local member should join groups as PersistentMember or not. If set to ephemeral the local member will receive an auto generated ID thus the local one is ignored.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.readConsistency": {
			"name": "camel.component.atomix-value.readConsistency",
			"description": "The read consistency level. One of: [ATOMIC] [ATOMIC_LEASE] [SEQUENTIAL] [LOCAL]",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"ATOMIC",
				"ATOMIC_LEASE",
				"SEQUENTIAL",
				"LOCAL"
			]
		},
		"camel.component.atomix-value.resourceConfigs": {
			"name": "camel.component.atomix-value.resourceConfigs",
			"description": "Cluster wide resources configuration.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.atomix-value.resourceOptions": {
			"name": "camel.component.atomix-value.resourceOptions",
			"description": "Local resources configurations",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}