{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.awsddbsink.CamelAwsddbsinkSinkConnector",
		"artifactId": "camel-aws-ddb-sink-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-aws-ddb-sink-sink",
		"type": "sink",
		"version": "4.4.3-SNAPSHOT",
		"description": "Send data to Amazon DynamoDB. The sent data inserts, updates, or deletes an item on the specified AWS DynamoDB table.\n\nThe basic authentication method for the AWS DynamoDB service is to specify an access key and a secret key. These parameters are optional because the Kamelet provides a default credentials provider.\n\nIf you use the default credentials provider, the DynamoDB client loads the credentials through this provider and doesn't use the basic authentication method.\n\nThis Kamelet expects a JSON-formatted body and it must include the primary key values that define the DynamoDB item. The mapping between the JSON fields and table attribute values is done by key. For example, for  '{\"username\":\"oscerd\", \"city\":\"Rome\"}' input, the Kamelet inserts or update an item in the specified AWS DynamoDB table and sets the values for the 'username' and 'city' attributes. \n\nFor PutItem operation the Json body defines all item attributes.\nFor DeleteItem operation the Json body defines only the primary key attributes that identify the item to delete.\nFor UpdateItem operation the Json body defines both key attributes to identify the item to be updated and all item attributes tht get updated on the item.\n\nThe given Json body can use \"operation\", \"key\" and \"item\" as top level properties that will be mapped to respective attribute value maps.\n{\n  \"operation\": \"PutItem\"\n  \"key\": {},\n  \"item\": {}\n}"
	},
	"properties": {
		"camel.kamelet.aws-ddb-sink.table": {
			"name": "camel.kamelet.aws-ddb-sink.table",
			"description": "The name of the DynamoDB table.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.aws-ddb-sink.accessKey": {
			"name": "camel.kamelet.aws-ddb-sink.accessKey",
			"description": "The access key obtained from AWS.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.aws-ddb-sink.secretKey": {
			"name": "camel.kamelet.aws-ddb-sink.secretKey",
			"description": "The secret key obtained from AWS.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.aws-ddb-sink.region": {
			"name": "camel.kamelet.aws-ddb-sink.region",
			"description": "The AWS region to access.",
			"priority": "HIGH",
			"required": "true"
		},
		"camel.kamelet.aws-ddb-sink.operation": {
			"name": "camel.kamelet.aws-ddb-sink.operation",
			"description": "The operation to perform. Example: PutItem",
			"defaultValue": "\"PutItem\"",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.aws-ddb-sink.useDefaultCredentialsProvider": {
			"name": "camel.kamelet.aws-ddb-sink.useDefaultCredentialsProvider",
			"description": "If true, the DynamoDB client loads credentials through a default credentials provider. If false, it uses the basic authentication method (access key and secret key).",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.aws-ddb-sink.uriEndpointOverride": {
			"name": "camel.kamelet.aws-ddb-sink.uriEndpointOverride",
			"description": "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.kamelet.aws-ddb-sink.overrideEndpoint": {
			"name": "camel.kamelet.aws-ddb-sink.overrideEndpoint",
			"description": "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}