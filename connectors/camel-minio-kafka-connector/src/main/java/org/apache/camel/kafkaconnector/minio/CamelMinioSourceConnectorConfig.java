/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.kafkaconnector.minio;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSourceConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelMinioSourceConnectorConfig
        extends
            CamelSourceConnectorConfig {

    public static final String CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_CONF = "camel.source.path.bucketName";
    public static final String CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_DOC = "Bucket name";
    public static final String CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_CONF = "camel.source.endpoint.autoCreateBucket";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_DOC = "Setting the autocreation of the bucket if bucket name not exist.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_CONF = "camel.source.endpoint.customHttpClient";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_DOC = "Set custom HTTP client for authenticated access.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_CONF = "camel.source.endpoint.endpoint";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_DOC = "Endpoint can be an URL, domain name, IPv4 address or IPv6 address.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_CONF = "camel.source.endpoint.minioClient";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_DOC = "Reference to a Minio Client object in the registry.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_CONF = "camel.source.endpoint.objectLock";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_DOC = "Set when creating new bucket.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_CONF = "camel.source.endpoint.policy";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_DOC = "The policy for this queue to set in the method.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_CONF = "camel.source.endpoint.proxyPort";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_DOC = "TCP/IP port number. 80 and 443 are used as defaults for HTTP and HTTPS.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_REGION_CONF = "camel.source.endpoint.region";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_REGION_DOC = "The region in which Minio client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1). You'll need to use the name Region.EU_WEST_1.id()";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_REGION_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_CONF = "camel.source.endpoint.secure";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_DOC = "Flag to indicate to use secure connection to minio service or not.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CONF = "camel.source.endpoint.serverSideEncryption";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_DOC = "Server-side encryption.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_CONF = "camel.source.endpoint.serverSideEncryptionCustomerKey";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DOC = "Server-side encryption for source object while copy/move objects.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_CONF = "camel.source.endpoint.autoCloseBody";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_DOC = "If this option is true and includeBody is true, then the MinioObject.close() method will be called on exchange completion. This option is strongly related to includeBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_CONF = "camel.source.endpoint.bridgeErrorHandler";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_DOC = "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_CONF = "camel.source.endpoint.bypassGovernanceMode";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_DOC = "Set this flag if you want to bypassGovernanceMode when deleting a particular object.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_CONF = "camel.source.endpoint.deleteAfterRead";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_DOC = "Delete objects from Minio after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs, the object is not deleted. If this option is false, then the same objects will be retrieve over and over again on the polls. Therefore you need to use the Idempotent Consumer EIP in the route to filter out duplicates. You can filter using the MinioConstants#BUCKET_NAME and MinioConstants#OBJECT_NAME headers, or only the MinioConstants#OBJECT_NAME header.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_CONF = "camel.source.endpoint.delimiter";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_DOC = "The delimiter which is used in the ListObjectsRequest to only consume objects we are interested in.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_CONF = "camel.source.endpoint.destinationBucketName";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_DOC = "Source bucket name.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_CONF = "camel.source.endpoint.destinationObjectName";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_DOC = "Source object name.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_CONF = "camel.source.endpoint.includeBody";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_DOC = "If it is true, the exchange body will be set to a stream to the contents of the file. If false, the headers will be set with the Minio object metadata, but the body will be null. This option is strongly related to autocloseBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_CONF = "camel.source.endpoint.includeFolders";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_DOC = "The flag which is used in the ListObjectsRequest to set include folders.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_CONF = "camel.source.endpoint.includeUserMetadata";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_DOC = "The flag which is used in the ListObjectsRequest to get objects with user meta data.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_CONF = "camel.source.endpoint.includeVersions";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_DOC = "The flag which is used in the ListObjectsRequest to get objects with versioning.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_CONF = "camel.source.endpoint.length";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_DOC = "Number of bytes of object data from offset.";
    public static final Long CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_CONF = "camel.source.endpoint.matchETag";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_DOC = "Set match ETag parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_CONF = "camel.source.endpoint.maxConnections";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_DOC = "Set the maxConnections parameter in the minio client configuration";
    public static final Integer CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_DEFAULT = 60;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_CONF = "camel.source.endpoint.maxMessagesPerPoll";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_DOC = "Gets the maximum number of messages as a limit to poll at each polling. Gets the maximum number of messages as a limit to poll at each polling. The default value is 10. Use 0 or a negative number to set it as unlimited.";
    public static final Integer CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_DEFAULT = 10;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_CONF = "camel.source.endpoint.modifiedSince";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_DOC = "Set modified since parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_CONF = "camel.source.endpoint.moveAfterRead";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_DOC = "Move objects from bucket to a different bucket after they have been retrieved. To accomplish the operation the destinationBucket option must be set. The copy bucket operation is only performed if the Exchange is committed. If a rollback occurs, the object is not moved.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_CONF = "camel.source.endpoint.notMatchETag";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_DOC = "Set not match ETag parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_CONF = "camel.source.endpoint.objectName";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_DOC = "To get the object from the bucket with the given object name.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_CONF = "camel.source.endpoint.offset";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_DOC = "Start byte position of object data.";
    public static final Long CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_CONF = "camel.source.endpoint.prefix";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_DOC = "Object name starts with prefix.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_CONF = "camel.source.endpoint.recursive";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_DOC = "List recursively than directory structure emulation.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_CONF = "camel.source.endpoint.sendEmptyMessageWhenIdle";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DOC = "If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_CONF = "camel.source.endpoint.startAfter";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_DOC = "list objects in bucket after this object name.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_CONF = "camel.source.endpoint.unModifiedSince";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_DOC = "Set un modified since parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1CONF = "camel.source.endpoint.useVersion1";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1DOC = "when true, version 1 of REST API is used.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_CONF = "camel.source.endpoint.versionId";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_DOC = "Set specific version_ID of a object when deleting the object.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_CONF = "camel.source.endpoint.exceptionHandler";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_DOC = "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_CONF = "camel.source.endpoint.exchangePattern";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_DOC = "Sets the exchange pattern when the consumer creates an exchange. One of: [InOnly] [InOut] [InOptionalOut]";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_CONF = "camel.source.endpoint.pollStrategy";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_DOC = "A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_CONF = "camel.source.endpoint.backoffErrorThreshold";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DOC = "The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.";
    public static final Integer CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_CONF = "camel.source.endpoint.backoffIdleThreshold";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DOC = "The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.";
    public static final Integer CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_CONF = "camel.source.endpoint.backoffMultiplier";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_DOC = "To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.";
    public static final Integer CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_CONF = "camel.source.endpoint.delay";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_DOC = "Milliseconds before the next poll.";
    public static final Long CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_DEFAULT = 500L;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_CONF = "camel.source.endpoint.greedy";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_DOC = "If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_CONF = "camel.source.endpoint.initialDelay";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_DOC = "Milliseconds before the first poll starts.";
    public static final Long CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_DEFAULT = 1000L;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_CONF = "camel.source.endpoint.repeatCount";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_DOC = "Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.";
    public static final Long CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_DEFAULT = 0L;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_CONF = "camel.source.endpoint.runLoggingLevel";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_DOC = "The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that. One of: [TRACE] [DEBUG] [INFO] [WARN] [ERROR] [OFF]";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_DEFAULT = "TRACE";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_CONF = "camel.source.endpoint.scheduledExecutorService";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DOC = "Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_CONF = "camel.source.endpoint.scheduler";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_DOC = "To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_DEFAULT = "none";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_CONF = "camel.source.endpoint.schedulerProperties";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_DOC = "To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_CONF = "camel.source.endpoint.startScheduler";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_DOC = "Whether the scheduler should be auto started.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_CONF = "camel.source.endpoint.timeUnit";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_DOC = "Time unit for initialDelay and delay options. One of: [NANOSECONDS] [MICROSECONDS] [MILLISECONDS] [SECONDS] [MINUTES] [HOURS] [DAYS]";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_DEFAULT = "MILLISECONDS";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_CONF = "camel.source.endpoint.useFixedDelay";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_DOC = "Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.";
    public static final Boolean CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_CONF = "camel.source.endpoint.accessKey";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_DOC = "Amazon AWS Secret Access Key or Minio Access Key. If not set camel will connect to service for anonymous access.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_CONF = "camel.source.endpoint.secretKey";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_DOC = "Amazon AWS Access Key Id or Minio Secret Key. If not set camel will connect to service for anonymous access.";
    public static final String CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_CONF = "camel.component.minio.autoCreateBucket";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_DOC = "Setting the autocreation of the bucket if bucket name not exist.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_CONF = "camel.component.minio.configuration";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_DOC = "The component configuration";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_CONF = "camel.component.minio.customHttpClient";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_DOC = "Set custom HTTP client for authenticated access.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_CONF = "camel.component.minio.endpoint";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_DOC = "Endpoint can be an URL, domain name, IPv4 address or IPv6 address.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_CONF = "camel.component.minio.minioClient";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_DOC = "Reference to a Minio Client object in the registry.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_CONF = "camel.component.minio.objectLock";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_DOC = "Set when creating new bucket.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_POLICY_CONF = "camel.component.minio.policy";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_POLICY_DOC = "The policy for this queue to set in the method.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_POLICY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_CONF = "camel.component.minio.proxyPort";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_DOC = "TCP/IP port number. 80 and 443 are used as defaults for HTTP and HTTPS.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_REGION_CONF = "camel.component.minio.region";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_REGION_DOC = "The region in which Minio client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1). You'll need to use the name Region.EU_WEST_1.id()";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_REGION_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SECURE_CONF = "camel.component.minio.secure";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SECURE_DOC = "Flag to indicate to use secure connection to minio service or not.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_SECURE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CONF = "camel.component.minio.serverSideEncryption";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_DOC = "Server-side encryption.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_CONF = "camel.component.minio.serverSideEncryptionCustomerKey";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DOC = "Server-side encryption for source object while copy/move objects.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_CONF = "camel.component.minio.autoCloseBody";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_DOC = "If this option is true and includeBody is true, then the MinioObject.close() method will be called on exchange completion. This option is strongly related to includeBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_CONF = "camel.component.minio.bridgeErrorHandler";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_DOC = "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_CONF = "camel.component.minio.bypassGovernanceMode";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_DOC = "Set this flag if you want to bypassGovernanceMode when deleting a particular object.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_CONF = "camel.component.minio.deleteAfterRead";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_DOC = "Delete objects from Minio after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs, the object is not deleted. If this option is false, then the same objects will be retrieve over and over again on the polls. Therefore you need to use the Idempotent Consumer EIP in the route to filter out duplicates. You can filter using the MinioConstants#BUCKET_NAME and MinioConstants#OBJECT_NAME headers, or only the MinioConstants#OBJECT_NAME header.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_CONF = "camel.component.minio.delimiter";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_DOC = "The delimiter which is used in the ListObjectsRequest to only consume objects we are interested in.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_CONF = "camel.component.minio.destinationBucketName";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_DOC = "Source bucket name.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_CONF = "camel.component.minio.destinationObjectName";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_DOC = "Source object name.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_CONF = "camel.component.minio.includeBody";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_DOC = "If it is true, the exchange body will be set to a stream to the contents of the file. If false, the headers will be set with the Minio object metadata, but the body will be null. This option is strongly related to autocloseBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_CONF = "camel.component.minio.includeFolders";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_DOC = "The flag which is used in the ListObjectsRequest to set include folders.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_CONF = "camel.component.minio.includeUserMetadata";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_DOC = "The flag which is used in the ListObjectsRequest to get objects with user meta data.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_CONF = "camel.component.minio.includeVersions";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_DOC = "The flag which is used in the ListObjectsRequest to get objects with versioning.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_CONF = "camel.component.minio.length";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_DOC = "Number of bytes of object data from offset.";
    public static final Long CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_CONF = "camel.component.minio.matchETag";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_DOC = "Set match ETag parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_CONF = "camel.component.minio.maxConnections";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_DOC = "Set the maxConnections parameter in the minio client configuration";
    public static final Integer CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_DEFAULT = 60;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_CONF = "camel.component.minio.maxMessagesPerPoll";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_DOC = "Gets the maximum number of messages as a limit to poll at each polling. Gets the maximum number of messages as a limit to poll at each polling. The default value is 10. Use 0 or a negative number to set it as unlimited.";
    public static final Integer CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_DEFAULT = 10;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_CONF = "camel.component.minio.modifiedSince";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_DOC = "Set modified since parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_CONF = "camel.component.minio.moveAfterRead";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_DOC = "Move objects from bucket to a different bucket after they have been retrieved. To accomplish the operation the destinationBucket option must be set. The copy bucket operation is only performed if the Exchange is committed. If a rollback occurs, the object is not moved.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_CONF = "camel.component.minio.notMatchETag";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_DOC = "Set not match ETag parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_CONF = "camel.component.minio.objectName";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_DOC = "To get the object from the bucket with the given object name.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_CONF = "camel.component.minio.offset";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_DOC = "Start byte position of object data.";
    public static final Long CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_CONF = "camel.component.minio.prefix";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_DOC = "Object name starts with prefix.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_CONF = "camel.component.minio.recursive";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_DOC = "List recursively than directory structure emulation.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_CONF = "camel.component.minio.startAfter";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_DOC = "list objects in bucket after this object name.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_CONF = "camel.component.minio.unModifiedSince";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_DOC = "Set un modified since parameter for get object(s).";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1CONF = "camel.component.minio.useVersion1";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1DOC = "when true, version 1 of REST API is used.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1DEFAULT = false;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_CONF = "camel.component.minio.versionId";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_DOC = "Set specific version_ID of a object when deleting the object.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_CONF = "camel.component.minio.autowiredEnabled";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_DOC = "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.";
    public static final Boolean CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_DEFAULT = true;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_CONF = "camel.component.minio.accessKey";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_DOC = "Amazon AWS Secret Access Key or Minio Access Key. If not set camel will connect to service for anonymous access.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_CONF = "camel.component.minio.secretKey";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_DOC = "Amazon AWS Access Key Id or Minio Secret Key. If not set camel will connect to service for anonymous access.";
    public static final String CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_DEFAULT = null;

    public CamelMinioSourceConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelMinioSourceConnectorConfig(Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSourceConnectorConfig.conf());
        conf.define(CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_MINIO_PATH_BUCKET_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CREATE_BUCKET_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_CUSTOM_HTTP_CLIENT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_ENDPOINT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MINIO_CLIENT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_LOCK_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_POLICY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_PROXY_PORT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_REGION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_REGION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_REGION_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SECURE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_AUTO_CLOSE_BODY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_BRIDGE_ERROR_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_BYPASS_GOVERNANCE_MODE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_DELETE_AFTER_READ_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_DELIMITER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_BUCKET_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_DESTINATION_OBJECT_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_BODY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_FOLDERS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_USER_METADATA_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_INCLUDE_VERSIONS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_LENGTH_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MATCH_ETAG_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MAX_CONNECTIONS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MAX_MESSAGES_PER_POLL_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MODIFIED_SINCE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_MOVE_AFTER_READ_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_NOT_MATCH_ETAG_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_OBJECT_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_OFFSET_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_PREFIX_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_RECURSIVE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SEND_EMPTY_MESSAGE_WHEN_IDLE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_START_AFTER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_UN_MODIFIED_SINCE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_USE_VERSION_1DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_VERSION_ID_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_EXCEPTION_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_EXCHANGE_PATTERN_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_POLL_STRATEGY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_ERROR_THRESHOLD_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_IDLE_THRESHOLD_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_BACKOFF_MULTIPLIER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_DELAY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_GREEDY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_INITIAL_DELAY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_REPEAT_COUNT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_RUN_LOGGING_LEVEL_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULED_EXECUTOR_SERVICE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SCHEDULER_PROPERTIES_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_START_SCHEDULER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_TIME_UNIT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_USE_FIXED_DELAY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_CONF, ConfigDef.Type.PASSWORD, CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_ACCESS_KEY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_CONF, ConfigDef.Type.PASSWORD, CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_ENDPOINT_SECRET_KEY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CREATE_BUCKET_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_CONFIGURATION_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_CUSTOM_HTTP_CLIENT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_ENDPOINT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MINIO_CLIENT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_LOCK_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_POLICY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_POLICY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_POLICY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_PROXY_PORT_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_REGION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_REGION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_REGION_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_SECURE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_SECURE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_SECURE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_AUTO_CLOSE_BODY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_BRIDGE_ERROR_HANDLER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_BYPASS_GOVERNANCE_MODE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_DELETE_AFTER_READ_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_DELIMITER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_BUCKET_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_DESTINATION_OBJECT_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_BODY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_FOLDERS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_USER_METADATA_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_INCLUDE_VERSIONS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_LENGTH_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MATCH_ETAG_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MAX_CONNECTIONS_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MAX_MESSAGES_PER_POLL_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MODIFIED_SINCE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_MOVE_AFTER_READ_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_NOT_MATCH_ETAG_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_OBJECT_NAME_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_CONF, ConfigDef.Type.LONG, CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_OFFSET_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_PREFIX_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_RECURSIVE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_START_AFTER_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_UN_MODIFIED_SINCE_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_USE_VERSION_1DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_VERSION_ID_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_AUTOWIRED_ENABLED_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_CONF, ConfigDef.Type.PASSWORD, CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_ACCESS_KEY_DOC);
        conf.define(CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_CONF, ConfigDef.Type.PASSWORD, CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_MINIO_COMPONENT_SECRET_KEY_DOC);
        return conf;
    }
}