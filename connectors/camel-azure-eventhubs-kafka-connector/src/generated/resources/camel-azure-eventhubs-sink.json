{
	"connector": {
		"class": "org.apache.camel.kafkaconnector.azureeventhubs.CamelAzureeventhubsSinkConnector",
		"artifactId": "camel-azure-eventhubs-kafka-connector",
		"groupId": "org.apache.camel.kafkaconnector",
		"id": "camel-azure-eventhubs-sink",
		"type": "sink",
		"version": "0.10.0-SNAPSHOT",
		"description": "The azure-eventhubs component that integrates Azure Event Hubs using AMQP protocol. Azure EventHubs is a highly scalable publish-subscribe service that can ingest millions of events per second and stream them to multiple consumers."
	},
	"properties": {
		"camel.sink.path.namespace": {
			"name": "camel.sink.path.namespace",
			"description": "EventHubs namespace created in Azure Portal",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.path.eventHubName": {
			"name": "camel.sink.path.eventHubName",
			"description": "EventHubs name under a specific namcespace",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.amqpRetryOptions": {
			"name": "camel.sink.endpoint.amqpRetryOptions",
			"description": "Sets the retry policy for EventHubAsyncClient. If not specified, the default retry options are used.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.amqpTransportType": {
			"name": "camel.sink.endpoint.amqpTransportType",
			"description": "Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is AmqpTransportType#AMQP. One of: [Amqp] [AmqpWebSockets]",
			"defaultValue": "\"AMQP\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"Amqp",
				"AmqpWebSockets"
			]
		},
		"camel.sink.endpoint.lazyStartProducer": {
			"name": "camel.sink.endpoint.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.partitionId": {
			"name": "camel.sink.endpoint.partitionId",
			"description": "Sets the identifier of the Event Hub partition that the events will be sent to. If the identifier is not specified, the Event Hubs service will be responsible for routing events that are sent to an available partition.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.partitionKey": {
			"name": "camel.sink.endpoint.partitionKey",
			"description": "Sets a hashing key to be provided for the batch of events, which instructs the Event Hubs service to map this key to a specific partition. The selection of a partition is stable for a given partition hashing key. Should any other batches of events be sent using the same exact partition hashing key, the Event Hubs service will route them all to the same partition. This should be specified only when there is a need to group events by partition, but there is flexibility into which partition they are routed. If ensuring that a batch of events is sent only to a specific partition, it is recommended that the {link #setPartitionId(String) identifier of the position be specified directly} when sending the batch.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.producerAsyncClient": {
			"name": "camel.sink.endpoint.producerAsyncClient",
			"description": "Sets the EventHubProducerAsyncClient.An asynchronous producer responsible for transmitting EventData to a specific Event Hub, grouped together in batches. Depending on the options specified when creating an {linkEventDataBatch}, the events may be automatically routed to an available partition or specific to a partition. Use by this component to produce the data in camel producer.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.connectionString": {
			"name": "camel.sink.endpoint.connectionString",
			"description": "Instead of supplying namespace, sharedAccessKey, sharedAccessName ... etc, you can just supply the connection string for your eventHub. The connection string for EventHubs already include all the necessary information to connection to your EventHub. To learn on how to generate the connection string, take a look at this documentation: https:\/\/docs.microsoft.com\/en-us\/azure\/event-hubs\/event-hubs-get-connection-string",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sharedAccessKey": {
			"name": "camel.sink.endpoint.sharedAccessKey",
			"description": "The generated value for the SharedAccessName",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.sink.endpoint.sharedAccessName": {
			"name": "camel.sink.endpoint.sharedAccessName",
			"description": "The name you chose for your EventHubs SAS keys",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.amqpRetryOptions": {
			"name": "camel.component.azure-eventhubs.amqpRetryOptions",
			"description": "Sets the retry policy for EventHubAsyncClient. If not specified, the default retry options are used.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.amqpTransportType": {
			"name": "camel.component.azure-eventhubs.amqpTransportType",
			"description": "Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is AmqpTransportType#AMQP. One of: [Amqp] [AmqpWebSockets]",
			"defaultValue": "\"AMQP\"",
			"priority": "MEDIUM",
			"required": "false",
			"enum": [
				"Amqp",
				"AmqpWebSockets"
			]
		},
		"camel.component.azure-eventhubs.configuration": {
			"name": "camel.component.azure-eventhubs.configuration",
			"description": "The component configurations",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.lazyStartProducer": {
			"name": "camel.component.azure-eventhubs.lazyStartProducer",
			"description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
			"defaultValue": "false",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.partitionId": {
			"name": "camel.component.azure-eventhubs.partitionId",
			"description": "Sets the identifier of the Event Hub partition that the events will be sent to. If the identifier is not specified, the Event Hubs service will be responsible for routing events that are sent to an available partition.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.partitionKey": {
			"name": "camel.component.azure-eventhubs.partitionKey",
			"description": "Sets a hashing key to be provided for the batch of events, which instructs the Event Hubs service to map this key to a specific partition. The selection of a partition is stable for a given partition hashing key. Should any other batches of events be sent using the same exact partition hashing key, the Event Hubs service will route them all to the same partition. This should be specified only when there is a need to group events by partition, but there is flexibility into which partition they are routed. If ensuring that a batch of events is sent only to a specific partition, it is recommended that the {link #setPartitionId(String) identifier of the position be specified directly} when sending the batch.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.producerAsyncClient": {
			"name": "camel.component.azure-eventhubs.producerAsyncClient",
			"description": "Sets the EventHubProducerAsyncClient.An asynchronous producer responsible for transmitting EventData to a specific Event Hub, grouped together in batches. Depending on the options specified when creating an {linkEventDataBatch}, the events may be automatically routed to an available partition or specific to a partition. Use by this component to produce the data in camel producer.",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.autowiredEnabled": {
			"name": "camel.component.azure-eventhubs.autowiredEnabled",
			"description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
			"defaultValue": "true",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.connectionString": {
			"name": "camel.component.azure-eventhubs.connectionString",
			"description": "Instead of supplying namespace, sharedAccessKey, sharedAccessName ... etc, you can just supply the connection string for your eventHub. The connection string for EventHubs already include all the necessary information to connection to your EventHub. To learn on how to generate the connection string, take a look at this documentation: https:\/\/docs.microsoft.com\/en-us\/azure\/event-hubs\/event-hubs-get-connection-string",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.sharedAccessKey": {
			"name": "camel.component.azure-eventhubs.sharedAccessKey",
			"description": "The generated value for the SharedAccessName",
			"priority": "MEDIUM",
			"required": "false"
		},
		"camel.component.azure-eventhubs.sharedAccessName": {
			"name": "camel.component.azure-eventhubs.sharedAccessName",
			"description": "The name you chose for your EventHubs SAS keys",
			"priority": "MEDIUM",
			"required": "false"
		}
	}
}