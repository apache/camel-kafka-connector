/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.kafkaconnector.googlestorageeventbasedsource;

import java.util.Map;
import javax.annotation.Generated;
import org.apache.camel.kafkaconnector.CamelSourceConnectorConfig;
import org.apache.kafka.common.config.ConfigDef;

@Generated("This class has been generated by camel-kafka-connector-generator-maven-plugin, remove this annotation to prevent it from being generated.")
public class CamelGooglestorageeventbasedsourceSourceConnectorConfig
        extends
            CamelSourceConnectorConfig {

    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_CONF = "camel.kamelet.google-storage-event-based-source.projectId";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_DOC = "The Google Cloud Pub/Sub Project ID.";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_DEFAULT = null;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_CONF = "camel.kamelet.google-storage-event-based-source.subscriptionName";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_DOC = "The subscription name.";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_DEFAULT = null;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_CONF = "camel.kamelet.google-storage-event-based-source.serviceAccountKey";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_DOC = "The service account key to use as credentials for the Pub/Sub publisher/subscriber. You must encode this value in base64.";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_DEFAULT = null;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_CONF = "camel.kamelet.google-storage-event-based-source.synchronousPull";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_DOC = "Specifies to synchronously pull batches of messages.";
    public static final Boolean CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_DEFAULT = false;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_CONF = "camel.kamelet.google-storage-event-based-source.maxMessagesPerPoll";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_DOC = "The maximum number of messages to receive from the server in a single API call.";
    public static final Integer CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_DEFAULT = 1;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_CONF = "camel.kamelet.google-storage-event-based-source.concurrentConsumers";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_DOC = "The number of parallel streams to consume from the subscription.";
    public static final Integer CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_DEFAULT = 1;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_CONF = "camel.kamelet.google-storage-event-based-source.bucketNameOrArn";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_DOC = "The Google Cloud Storage bucket name or Bucket Amazon Resource Name (ARN).";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_DEFAULT = null;
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_CONF = "camel.kamelet.google-storage-event-based-source.getObject";
    public static final String CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_DOC = "If getObject is enabled, then the file created in the Bucket will be get and returned as body, if not only the event will be returned as body.";
    public static final Boolean CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_DEFAULT = false;

    public CamelGooglestorageeventbasedsourceSourceConnectorConfig(
            ConfigDef config,
            Map<String, String> parsedConfig) {
        super(config, parsedConfig);
    }

    public CamelGooglestorageeventbasedsourceSourceConnectorConfig(
            Map<String, String> parsedConfig) {
        this(conf(), parsedConfig);
    }

    public static ConfigDef conf() {
        ConfigDef conf = new ConfigDef(CamelSourceConnectorConfig.conf());
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_PROJECT_ID_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SUBSCRIPTION_NAME_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SERVICE_ACCOUNT_KEY_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_SYNCHRONOUS_PULL_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_MAX_MESSAGES_PER_POLL_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_CONF, ConfigDef.Type.INT, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_CONCURRENT_CONSUMERS_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_CONF, ConfigDef.Type.STRING, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_DEFAULT, ConfigDef.Importance.HIGH, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_BUCKET_NAME_OR_ARN_DOC);
        conf.define(CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_CONF, ConfigDef.Type.BOOLEAN, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_DEFAULT, ConfigDef.Importance.MEDIUM, CAMEL_SOURCE_GOOGLESTORAGEEVENTBASEDSOURCE_KAMELET_GET_OBJECT_DOC);
        return conf;
    }
}